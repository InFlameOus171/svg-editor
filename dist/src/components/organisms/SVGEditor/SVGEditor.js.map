{"version":3,"file":"SVGEditor.js","sourceRoot":"","sources":["../../../../../src/components/organisms/SVGEditor/SVGEditor.ts"],"names":[],"mappings":"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","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement, state } from 'lit/decorators.js';\nimport { nanoid } from 'nanoid';\nimport { ConnectionStatus } from '../../../types/network.types';\nimport type { SVGParamsBase } from '../../../types/types';\nimport { Editor } from '../../../util/Editor';\nimport { SVGParamFieldID, Tools_List } from '../../../util/helper/constants.js';\nimport { hexToRGBA } from '../../../util/helper/util';\nimport { Connection } from '../../../util/network';\nimport '../../atoms/MenuButton';\nimport '../../atoms/PositionInformation';\nimport '../../atoms/ToolboxButton';\nimport type { IToolboxButtonProps } from '../../atoms/ToolboxButton/ToolboxButton.types';\nimport '../../molecules/ConnectionSection';\nimport '../../molecules/DialogSection';\nimport '../../molecules/DrawZone';\nimport { DrawZone } from '../../molecules/DrawZone';\nimport '../../molecules/FooterFields';\nimport '../../molecules/ToolBox';\nimport {\n  layoutContentStyle,\n  layoutHeaderStyle,\n  layoutStyle,\n} from './SVGEditor.styles';\nimport { getToolboxButtonsProps } from './SVGEditor.util';\n\n@customElement('svg-editor')\nexport class SVGEditor extends LitElement {\n  @state()\n  width: number = 0;\n  @state()\n  height: number = 0;\n  @state()\n  editor: Editor | null = null;\n  @state()\n  position?: [number, number];\n  @state()\n  connection?: Connection;\n  @state()\n  chatLog: Array<{ userName: string; message: string }> = [];\n  @state()\n  connectionStatus: ConnectionStatus =\n    this.connection?.getStatus() ?? 'disconnected';\n\n  static styles = [layoutStyle, layoutHeaderStyle, layoutContentStyle];\n\n  firstUpdated() {\n    this.updateResize();\n  }\n\n  updateChatLog = (chatLog: Array<{ userName: string; message: string }>) => {\n    this.chatLog = [...chatLog];\n  };\n\n  updateConnection = (status: ConnectionStatus) => {\n    this.connectionStatus = status;\n  };\n\n  updated(_changedProperties: Map<string | number | symbol, unknown>): void {\n    if (!this.editor && this.editor !== _changedProperties.get('editor')) {\n      const drawZone = this.shadowRoot?.getElementById('draw-zone') as\n        | DrawZone\n        | undefined;\n      const drawLayer = drawZone?.shadowRoot?.getElementById(\n        'draw-layer'\n      ) as HTMLCanvasElement;\n      const previewLayer = drawZone?.shadowRoot?.getElementById(\n        'preview-layer'\n      ) as HTMLCanvasElement | undefined;\n      if (drawLayer && previewLayer) {\n        new ResizeObserver(this.updateResize).observe(drawLayer);\n        this.editor = new Editor(\n          drawLayer,\n          previewLayer,\n          [previewLayer.offsetLeft, previewLayer.offsetTop],\n          this\n        );\n\n        this.connection = new Connection(\n          this.editor.deleteFromShapes,\n          this.editor.updateShapes,\n          this.editor.getAllShapes,\n          this.editor.resetEditor,\n          this.updateConnection,\n          this.updateChatLog\n        );\n      }\n    }\n  }\n\n  handleSelectTool = (tool: Tools_List | null) => {\n    this.editor?.onSelectTool(tool);\n  };\n\n  handleJoinRoom = (data: { userName?: string; roomId?: string }) => {\n    const { userName, roomId } = data;\n    if (this.editor && roomId && this.connection) {\n      this.connection.connect(roomId, userName);\n      this.editor.setConnection(this.connection);\n      document.title = document.title + ' | Room:' + roomId;\n    }\n  };\n\n  handleSVGParamChange = (\n    field: keyof SVGParamsBase,\n    targetId: SVGParamFieldID\n  ) => {\n    let value;\n    const fillFields = [\n      SVGParamFieldID.FILL_COLOR,\n      SVGParamFieldID.FILL_OPACITY,\n    ];\n    const strokeFields = [\n      SVGParamFieldID.STROKE_COLOR,\n      SVGParamFieldID.STROKE_OPACITY,\n    ];\n    const dualFields = [...fillFields, ...strokeFields];\n\n    if (dualFields.includes(targetId)) {\n      let opacity, color;\n      if (strokeFields.includes(targetId)) {\n        opacity = (\n          this.shadowRoot?.getElementById(\n            SVGParamFieldID.STROKE_OPACITY\n          ) as HTMLInputElement\n        )?.value;\n        color = (\n          this.shadowRoot?.getElementById(\n            SVGParamFieldID.STROKE_COLOR\n          ) as HTMLInputElement\n        )?.value;\n        value = hexToRGBA(color ?? '#000000', opacity);\n      } else {\n        opacity = (\n          this.shadowRoot?.getElementById(\n            SVGParamFieldID.FILL_OPACITY\n          ) as HTMLInputElement\n        )?.value;\n        color = (\n          this.shadowRoot?.getElementById(\n            SVGParamFieldID.FILL_COLOR\n          ) as HTMLInputElement\n        )?.value;\n        value = hexToRGBA(color ?? '#000000', opacity);\n      }\n    } else {\n      if (SVGParamFieldID.LINE_DASH === targetId) {\n        value = (\n          this.shadowRoot?.getElementById(\n            SVGParamFieldID.LINE_DASH\n          ) as HTMLInputElement\n        )?.value\n          .trim()\n          .split(/[\\s,]+/)\n          .filter(splitValue => !!splitValue)\n          .map(lineDashValue => parseInt(lineDashValue));\n        if (value.some(innerValue => !isFinite(innerValue))) {\n          value = [0];\n        }\n      } else {\n        value = (this.shadowRoot?.getElementById(targetId) as HTMLInputElement)\n          ?.value;\n      }\n    }\n    this.editor?.setShapeParam(field, value);\n  };\n\n  handleLeaveRoom = () => {\n    this.connection?.disconnect();\n    document.title = 'SVG Editor';\n  };\n\n  updateResize = () => {\n    this.width = window.innerWidth;\n    this.height = window.innerHeight;\n  };\n\n  render() {\n    const tools: IToolboxButtonProps[] = getToolboxButtonsProps(\n      (tools: Tools_List | null) => {\n        this.handleSelectTool(tools);\n      }\n    );\n    return html`\n      <div id=\"content\">\n        <draw-zone\n          id=\"draw-zone\"\n          .height=${this.height}\n          .width=${this.width}\n          .onPositionChange=${(position?: [number, number]) =>\n            (this.position = position)}\n        ></draw-zone>\n        <div id=\"right-main-section\">\n          <tool-box id=\"tool-box\" .tools=${tools}></tool-box>\n          <connection-section\n            .status=${this.connectionStatus}\n            .onJoinRoom=${this.handleJoinRoom}\n            .onLeaveRoom=${this.handleLeaveRoom}\n            .onSendMessage=${this.connection?.sendChatMessage}\n            .userName=${this.connection?.getUserName() ?? 'user_' + nanoid(6)}\n            .roomId=${this.connection?.getRoom() ?? ''}\n            .chatLog=${this.chatLog}\n          ></connection-section>\n        </div>\n      </div>\n      <dialog-section\n        .onSave=${this.editor?.onSave}\n        .onSelectSvgFile=${this.editor?.importSVG}\n      ></dialog-section>\n      <div id=\"footer\">\n        <footer-fields\n          .handleSVGParamChange=${this.handleSVGParamChange}\n        ></footer-fields>\n        <position-information .position=${this.position}></position-information>\n      </div>\n    `;\n  }\n}\n"]}