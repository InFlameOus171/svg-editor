{"version":3,"file":"ToolBox.util.js","sourceRoot":"","sources":["../../../../../src/components/molecules/ToolBox/ToolBox.util.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AAK3B,MAAM,CAAC,MAAM,eAAe,GAAG,CAAC,KAAkC,EAAE,EAAE;IACpE,IAAI,OAAO,GAAG,CAAC,CAAC;IAChB,OAAO,KAAK,aAAL,KAAK,uBAAL,KAAK,CAAE,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,EAAE,EAAE;QAChC,KAAK,GAAG,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC;QAC5B,OAAO,IAAI,CAAA;yBACU,OAAO;;eAEjB,kBAAkB,GAAG,IAAI,CAAC,EAAE;qBACtB,IAAI,CAAC,OAAO;sBACX,IAAI,CAAC,EAAE;sBACP,IAAI,CAAC,QAAQ;kBACjB,IAAI,CAAC,IAAI;sBACL,IAAI,CAAC,QAAQ;;;;KAI9B,CAAC;IACJ,CAAC,CAAC,CAAC;AACL,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,aAAa,GAAG,CAAC,MAAiB,EAAE,IAAgB,EAAE,EAAE;;IACnE,MAAM,OAAO,GAAG,MAAA,MAAM,CAAC,UAAU,0CAAE,cAAc,CAAC,UAAU,CAAC,CAAC;IAC9D,MAAM,aAAa,GAAG,MAAA,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,UAAU,0CAAE,cAAc,CACvD,kBAAkB,GAAG,IAAI,CAC1B,CAAC;IACF,OAAO,MAAA,aAAa,aAAb,aAAa,uBAAb,aAAa,CAAE,UAAU,0CAAE,cAAc,CAAC,IAAI,CAAC,CAAC;AACzD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAC/B,MAAiB,EACjB,IAAgB,EAChB,WAAoB,IAAI,EACxB,EAAE;IACF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC/C,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,YAAY,CAAC,UAAU,EAAE,GAAG,QAAQ,EAAE,CAAC,CAAC;AACtD,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,mBAAmB,GAAG,CACjC,MAAiB,EACjB,IAAgB,EAChB,aAAsB,IAAI,EAC1B,EAAE;IACF,MAAM,UAAU,GAAG,aAAa,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;IAC/C,IAAI,UAAU,EAAE;QACd,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;KAC1C;SAAM;QACL,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,eAAe,CAAC,UAAU,CAAC,CAAC;KACzC;AACH,CAAC,CAAC","sourcesContent":["import { html } from 'lit';\nimport { Tools_List } from '../../../util/helper/constants';\nimport { IToolboxButtonProps } from '../../atoms/ToolboxButton/ToolboxButton.types';\nimport { SVGEditor } from '../../organisms/SVGEditor';\n\nexport const getButtonColumn = (tools?: Array<IToolboxButtonProps>) => {\n  let counter = 0;\n  return tools?.map((tool, index) => {\n    index % 3 == 0 && ++counter;\n    return html`\n      <span class=\"row-${counter}\">\n        <toolbox-button\n          id=${'tool-box-button-' + tool.id}\n          .onClick=${tool.onClick}\n          .buttonId=${tool.id}\n          .toolName=${tool.toolName}\n          .icon=${tool.icon}\n          .disabled=${tool.disabled}\n        >\n        </toolbox-button>\n      </span>\n    `;\n  });\n};\n\nexport const getToolButton = (editor: SVGEditor, tool: Tools_List) => {\n  const toolBox = editor.shadowRoot?.getElementById('tool-box');\n  const toolBoxButton = toolBox?.shadowRoot?.getElementById(\n    'tool-box-button-' + tool\n  );\n  return toolBoxButton?.shadowRoot?.getElementById(tool);\n};\n\nexport const setIsButtonActive = (\n  editor: SVGEditor,\n  tool: Tools_List,\n  isActive: boolean = true\n) => {\n  const toolButton = getToolButton(editor, tool);\n  toolButton?.setAttribute('isactive', `${isActive}`);\n};\n\nexport const setIsButtonDisabled = (\n  editor: SVGEditor,\n  tool: Tools_List,\n  isDisabled: boolean = true\n) => {\n  const toolButton = getToolButton(editor, tool);\n  if (isDisabled) {\n    toolButton?.setAttribute('disabled', '');\n  } else {\n    toolButton?.removeAttribute('disabled');\n  }\n};\n"]}