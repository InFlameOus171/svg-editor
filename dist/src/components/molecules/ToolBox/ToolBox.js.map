{"version":3,"file":"ToolBox.js","sourceRoot":"","sources":["../../../../../src/components/molecules/ToolBox/ToolBox.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,KAAK,EAAE,MAAM,mBAAmB,CAAC;AAInE,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,eAAe,EAAE,MAAM,gBAAgB,CAAC;AAGjD,IAAa,OAAO,GAApB,MAAa,OAAQ,SAAQ,UAAU;IAAvC;;;QAUE,UAAK,GAA2B,EAAE,CAAC;QAMnC,gBAAW,GAAG,MAAA,IAAI,CAAC,KAAK,0CAAE,MAAM,CAAC;IAiBnC,CAAC;IAVC,iBAAiB;QACf,KAAK,CAAC,iBAAiB,EAAE,CAAC;QAC1B,IAAI,CAAC,aAAa,EAAE,CAAC;IACvB,CAAC;IAED,MAAM;QACJ,OAAO,IAAI,CAAA;iCACkB,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC;KACvD,CAAC;IACJ,CAAC;CACF,CAAA;AAZQ,cAAM,GAAG,aAAa,CAAC;AAX9B;IATC,QAAQ,CAAC;QACR,IAAI,EAAE,KAAK;QACX,UAAU,EAAE,CACV,KAA4B,EAC5B,QAA+B,EAC/B,EAAE;YACF,OAAO,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAK,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC5D,CAAC;KACF,CAAC;sCACiC;AAGnC;IADC,QAAQ,EAAE;yCACiB;AAG5B;IADC,KAAK,EAAE;4CACyB;AAGjC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6CACG;AAnBnB,OAAO;IADnB,aAAa,CAAC,UAAU,CAAC;GACb,OAAO,CAiCnB;SAjCY,OAAO","sourcesContent":["import { LitElement, html } from 'lit';\r\nimport { customElement, property, state } from 'lit/decorators.js';\r\nimport type { NullableString } from '../../../types/types.js';\r\nimport { Tools_List } from '../../../util/helper/constants.js';\r\nimport type { IToolboxButtonProps } from '../../atoms/ToolboxButton/ToolboxButton.types';\r\nimport { toolBoxStyles } from './ToolBox.styles';\r\nimport { getButtonColumn } from './ToolBox.util';\r\n\r\n@customElement('tool-box')\r\nexport class ToolBox extends LitElement {\r\n  @property({\r\n    type: Array,\r\n    hasChanged: (\r\n      value: IToolboxButtonProps[],\r\n      oldValue: IToolboxButtonProps[]\r\n    ) => {\r\n      return JSON.stringify(value) !== JSON.stringify(oldValue);\r\n    },\r\n  })\r\n  tools?: IToolboxButtonProps[] = [];\r\n\r\n  @property()\r\n  onChange?: () => Tools_List;\r\n\r\n  @state()\r\n  toolsLength = this.tools?.length;\r\n\r\n  @property({ type: String })\r\n  selectedTool?: NullableString;\r\n\r\n  static styles = toolBoxStyles;\r\n\r\n  connectedCallback(): void {\r\n    super.connectedCallback();\r\n    this.requestUpdate();\r\n  }\r\n\r\n  render() {\r\n    return html`\r\n      <div id=\"column-wrapper\">${getButtonColumn(this.tools)}</div>\r\n    `;\r\n  }\r\n}\r\n"]}