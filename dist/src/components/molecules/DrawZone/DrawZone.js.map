{"version":3,"file":"DrawZone.js","sourceRoot":"","sources":["../../../../../src/components/molecules/DrawZone/DrawZone.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAE5D,OAAO,EAAE,cAAc,EAAE,MAAM,mBAAmB,CAAC;AAGnD,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,UAAU;IAAxC;;QAEE,WAAM,GAAW,CAAC,CAAC;QAGnB,UAAK,GAAW,CAAC,CAAC;IAsCpB,CAAC;IAjCW,YAAY,CACpB,kBAA0D;;QAE1D,MAAM,SAAS,GAAG,MAAA,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,UAAU,0CAAE,cAAc,CAChD,YAAY,CACQ,CAAC;QAEvB,SAAS,CAAC,gBAAgB,CAAC,WAAW,EAAE,CAAC,KAAiB,EAAE,EAAE;;YAC5D,MAAM,IAAI,GAAG,SAAS,CAAC,qBAAqB,EAAE,CAAC;YAC/C,MAAA,IAAI,CAAC,gBAAgB,+CAArB,IAAI,EAAoB;gBACtB,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,IAAI;gBACzB,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG;aACzB,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;QAEH,SAAS,CAAC,gBAAgB,CAAC,UAAU,EAAE,CAAC,KAAiB,EAAE,EAAE;;YAC3D,MAAA,IAAI,CAAC,gBAAgB,+CAArB,IAAI,EAAoB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,MAAM;QACJ,OAAO,IAAI,CAAA;;iBAEE,IAAI,CAAC,MAAM;gBACZ,IAAI,CAAC,KAAK;;;;iBAIT,IAAI,CAAC,MAAM;gBACZ,IAAI,CAAC,KAAK;iBACT,CAAC;IAChB,CAAC;CACF,CAAA;AAbQ,eAAM,GAAG,CAAC,cAAc,CAAC,CAAC;AA5BjC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;wCACR;AAGnB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;uCACT;AAGlB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;kDACyB;AARzC,QAAQ;IADpB,aAAa,CAAC,WAAW,CAAC;GACd,QAAQ,CA2CpB;SA3CY,QAAQ","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { Coordinates } from '../../../types/types';\nimport { drawZoneStyles } from './DrawZone.styles';\n\n@customElement('draw-zone')\nexport class DrawZone extends LitElement {\n  @property({ type: Number })\n  height: number = 0;\n\n  @property({ type: Number })\n  width: number = 0;\n\n  @property({ type: String })\n  onPositionChange?: (position?: Coordinates) => void;\n\n  protected firstUpdated(\n    _changedProperties: Map<string | number | symbol, unknown>\n  ): void {\n    const drawLayer = this?.shadowRoot?.getElementById(\n      'draw-layer'\n    ) as HTMLCanvasElement;\n\n    drawLayer.addEventListener('mousemove', (event: MouseEvent) => {\n      const rect = drawLayer.getBoundingClientRect();\n      this.onPositionChange?.([\n        event.clientX - rect.left,\n        event.clientY - rect.top,\n      ]);\n    });\n\n    drawLayer.addEventListener('mouseout', (event: MouseEvent) => {\n      this.onPositionChange?.([0, 0]);\n    });\n  }\n\n  static styles = [drawZoneStyles];\n  render() {\n    return html`<canvas\n        id=\"draw-layer\"\n        height=${this.height}\n        width=${this.width}\n      ></canvas>\n      <canvas\n        id=\"preview-layer\"\n        height=${this.height}\n        width=${this.width}\n      ></canvas>`;\n  }\n}\n"]}