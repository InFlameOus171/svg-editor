{"version":3,"file":"ConnectionSection.js","sourceRoot":"","sources":["../../../../../src/components/molecules/ConnectionSection/ConnectionSection.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,uBAAuB,EAAE,MAAM,4BAA4B,CAAC;AACrE,OAAO,kBAAkB,CAAC;AAC1B,OAAO,6BAA6B,CAAC;AACrC,OAAO,yBAAyB,CAAC;AACjC,OAAO,EAAE,MAAM,EAAE,MAAM,QAAQ,CAAC;AAIhC,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,UAAU;IAAjD;;QAIE,aAAQ,GAAY,OAAO,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;QAExC,WAAM,GAAW,EAAE,CAAC;QAMpB,YAAO,GAAiD,EAAE,CAAC;IAiC7D,CAAC;IAxBC,MAAM;QACJ,OAAO,IAAI,CAAA;;;kBAGG,IAAI,CAAC,MAAM;oBACT,IAAI,CAAC,QAAQ;sBACX,IAAI,CAAC,UAAU;;;;uBAId,IAAI,CAAC,WAAW;oBACnB,IAAI,CAAC,QAAQ;kBACf,IAAI,CAAC,MAAM;;;;yBAIJ,IAAI,CAAC,aAAa;mBACxB,IAAI,CAAC,OAAO;sBACT,IAAI,CAAC,MAAM,KAAK,YAAY;YAC1C,IAAI,CAAC,MAAM,KAAK,cAAc;;;KAGjC,CAAC;IACJ,CAAC;CACF,CAAA;AA5CQ,wBAAM,GAAG,CAAC,uBAAuB,CAAC,CAAC;AAG1C;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;mDACa;AAExC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;iDACP;AAEpB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;iDAChB;AAI1B;IAHC,QAAQ,CAAC;QACR,IAAI,EAAE,KAAK;KACZ,CAAC;kDACyD;AAG3D;IADC,QAAQ,EAAE;qDACyD;AAEpE;IADC,QAAQ,EAAE;sDACc;AAEzB;IADC,QAAQ,EAAE;wDACgC;AAnBhC,iBAAiB;IAD7B,aAAa,CAAC,oBAAoB,CAAC;GACvB,iBAAiB,CA6C7B;SA7CY,iBAAiB","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { connectionSectionStyles } from './ConnectionSection.styles';\nimport '../../atoms/Chat';\nimport '../../atoms/RoomInformation';\nimport '../../atoms/ConnectForm';\nimport { nanoid } from 'nanoid';\nimport { ConnectionStatus } from '../../../types/network.types';\n\n@customElement('connection-section')\nexport class ConnectionSection extends LitElement {\n  static styles = [connectionSectionStyles];\n\n  @property({ type: String })\n  userName?: string = 'user_' + nanoid(5);\n  @property({ type: String })\n  roomId: string = '';\n  @property({ type: String, reflect: true })\n  status?: ConnectionStatus;\n  @property({\n    type: Array,\n  })\n  chatLog: Array<{ userName: string; message: string }> = [];\n\n  @property()\n  onJoinRoom?: (data: { userName?: string; roomId?: string }) => void;\n  @property()\n  onLeaveRoom?: () => void;\n  @property()\n  onSendMessage?: (message?: string) => void;\n\n  render() {\n    return html`\n      <h3>Connection</h3>\n      <connect-form\n        .roomId=${this.roomId}\n        .userName=${this.userName}\n        .onJoinRoom=${this.onJoinRoom}\n      >\n      </connect-form>\n      <room-information\n        .onLeaveRoom=${this.onLeaveRoom}\n        .userName=${this.userName}\n        .roomId=${this.roomId}\n      >\n      </room-information>\n      <chat-section\n        .onSendMessage=${this.onSendMessage}\n        .chatLog=${this.chatLog}\n        .isDisabled=${this.status === 'connecting' ||\n        this.status === 'disconnected'}\n      >\n      </chat-section>\n    `;\n  }\n}\n"]}