{"version":3,"file":"ConnectForm.js","sourceRoot":"","sources":["../../../../../src/components/atoms/ConnectForm/ConnectForm.ts"],"names":[],"mappings":";;AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,iBAAiB,EAAE,MAAM,sBAAsB,CAAC;AAIzD,IAAa,WAAW,GAAxB,MAAa,WAAY,SAAQ,UAAU;IAA3C;;QAUE,sCAAkB,GAAG,EAAE;;YACrB,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;YAC/B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC3B,MAAA,IAAI,CAAC,UAAU,+CAAf,IAAI,EAAc,EAAE,QAAQ,EAAE,MAAM,EAAE,CAAC,CAAC;QAC1C,CAAC,EAAC;QAEF,0CAAsB,CAAC,KAAY,EAAE,EAAE;;YACrC,IAAI,CAAC,MAAM;gBACT,MAAA,MAAC,KAAK,CAAC,MAAuC,0CAAE,KAAK,mCAAI,IAAI,CAAC,MAAM,CAAC;QACzE,CAAC,EAAC;QACF,4CAAwB,CAAC,KAAiB,EAAE,EAAE;;YAC5C,IAAI,CAAC,QAAQ;gBACX,MAAA,MAAC,KAAK,CAAC,MAAuC,0CAAE,KAAK,mCAAI,IAAI,CAAC,QAAQ,CAAC;QAC3E,CAAC,EAAC;IAsBJ,CAAC;IApBW,MAAM;;QACd,OAAO,IAAI,CAAA;;;;sBAIO,uBAAA,IAAI,yCAAsB;;;;0BAItB,MAAA,IAAI,CAAC,QAAQ,mCAAI,EAAE;;;;2BAIlB,uBAAA,IAAI,uCAAoB;;;;yBAI1B,uBAAA,IAAI,mCAAgB;aAChC,CAAC;IACZ,CAAC;CACF,CAAA;;AArCQ,kBAAM,GAAG,CAAC,iBAAiB,CAAC,CAAC;AANpC;IADC,QAAQ,EAAE;+CAC2B;AAGtC;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;6CACT;AAElB;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;2CACX;AAPL,WAAW;IADvB,aAAa,CAAC,cAAc,CAAC;GACjB,WAAW,CA6CvB;SA7CY,WAAW","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { connectFormStyles } from './ConnectForm.styles';\nimport { RoomData } from './ConnectForm.types';\n\n@customElement('connect-form')\nexport class ConnectForm extends LitElement {\n  @property()\n  onJoinRoom?: (data: RoomData) => void;\n\n  @property({ type: String })\n  userName?: string;\n  @property({ type: String })\n  roomId?: string;\n  static styles = [connectFormStyles];\n\n  #handleJoinRoom = () => {\n    const userName = this.userName;\n    const roomId = this.roomId;\n    this.onJoinRoom?.({ userName, roomId });\n  };\n\n  #handleRoomIdChange = (event: Event) => {\n    this.roomId =\n      (event.target as HTMLInputElement | undefined)?.value ?? this.roomId;\n  };\n  #handleUserNameChange = (event: InputEvent) => {\n    this.userName =\n      (event.target as HTMLInputElement | undefined)?.value ?? this.userName;\n  };\n\n  protected render() {\n    return html`<div>\n        <label\n          ><div id=\"username-form-label\">Username:</div>\n          <input\n            @change=${this.#handleUserNameChange}\n            id=\"user\"\n            type=\"text\"\n            maxlength=\"10\"\n            placeholder=${this.userName ?? ''}\n        /></label>\n        <label\n          ><div id=\"connect-form-label\">Room ID:</div>\n          <input @change=${this.#handleRoomIdChange} id=\"room\" type=\"text\"\n        /></label>\n      </div>\n      <div id=\"connect-button-container\">\n        <button @click=${this.#handleJoinRoom}>Connect</button>\n      </div>`;\n  }\n}\n"]}