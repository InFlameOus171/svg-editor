{"version":3,"file":"Chat.js","sourceRoot":"","sources":["../../../../../src/components/atoms/Chat/Chat.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,IAAI,EAAE,UAAU,EAAE,MAAM,KAAK,CAAC;AACvC,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,mBAAmB,CAAC;AAC5D,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;AAG3C,IAAa,IAAI,GAAjB,MAAa,IAAK,SAAQ,UAAU;IAApC;;QAEE,YAAO,GAAiD,EAAE,CAAC;QAI3D,eAAU,GAAa,IAAI,CAAC;QAI5B,sBAAiB,GAAG,GAAG,EAAE;;YACvB,MAAM,KAAK,GAAG,MACZ,MAAA,IAAI,CAAC,UAAU,0CAAE,cAAc,CAAC,eAAe,CAGhD,0CAAE,KAAK,CAAC;YACT,MAAA,IAAI,CAAC,aAAa,+CAAlB,IAAI,EAAiB,KAAK,CAAC,CAAC;QAC9B,CAAC,CAAC;IA6CJ,CAAC;IA3CW,OAAO,CACf,kBAA0D;;QAE1D,IAAI,kBAAkB,CAAC,GAAG,CAAC,YAAY,CAAC,EAAE;YACxC,IAAI,IAAI,CAAC,UAAU,EAAE;gBACnB,MAAA,MAAA,IAAI,CAAC,UAAU,0CACX,cAAc,CAAC,eAAe,CAAC,0CAC/B,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;gBACjC,MAAA,MAAA,IAAI,CAAC,UAAU,0CACX,cAAc,CAAC,qBAAqB,CAAC,0CACrC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;aAClC;iBAAM;gBACL,MAAA,MAAA,IAAI,CAAC,UAAU,0CACX,cAAc,CAAC,eAAe,CAAC,0CAC/B,eAAe,CAAC,UAAU,CAAC,CAAC;gBAChC,MAAA,MAAA,IAAI,CAAC,UAAU,0CACX,cAAc,CAAC,qBAAqB,CAAC,0CACrC,eAAe,CAAC,UAAU,CAAC,CAAC;aACjC;SACF;QACD,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC;IAClC,CAAC;IAED,MAAM;;QACJ,OAAO,IAAI,CAAA;;;UAGL,MAAA,IAAI,CAAC,OAAO,0CAAE,GAAG,CAAC,KAAK,CAAC,EAAE;YAC1B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC1B,OAAO,IAAI,CAAA;mBACF,KAAK,CAAC,QAAQ;mBACd,KAAK,CAAC,OAAO;iBACf,CAAC;QACV,CAAC,CAAC;;;;kDAIwC,IAAI,CAAC,iBAAiB;;;;KAInE,CAAC;IACJ,CAAC;CACF,CAAA;AAtDQ,WAAM,GAAG,CAAC,UAAU,CAAC,CAAC;AAN7B;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC;qCACiC;AAE3D;IADC,QAAQ,EAAE;2CACgC;AAE3C;IADC,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;wCACA;AANjB,IAAI;IADhB,aAAa,CAAC,cAAc,CAAC;GACjB,IAAI,CA8DhB;SA9DY,IAAI","sourcesContent":["import { html, LitElement } from 'lit';\nimport { customElement, property } from 'lit/decorators.js';\nimport { chatStyles } from './Chat.styles';\n\n@customElement('chat-section')\nexport class Chat extends LitElement {\n  @property({ type: Array })\n  chatLog: Array<{ userName: string; message: string }> = [];\n  @property()\n  onSendMessage?: (message?: string) => void;\n  @property({ type: Boolean })\n  isDisabled?: boolean = true;\n\n  static styles = [chatStyles];\n\n  handleSendMessage = () => {\n    const value = (\n      this.shadowRoot?.getElementById('message-field') as\n        | HTMLInputElement\n        | undefined\n    )?.value;\n    this.onSendMessage?.(value);\n  };\n\n  protected updated(\n    _changedProperties: Map<string | number | symbol, unknown>\n  ): void {\n    if (_changedProperties.has('isDisabled')) {\n      if (this.isDisabled) {\n        this.shadowRoot\n          ?.getElementById('message-field')\n          ?.setAttribute('disabled', '');\n        this.shadowRoot\n          ?.getElementById('send-message-button')\n          ?.setAttribute('disabled', '');\n      } else {\n        this.shadowRoot\n          ?.getElementById('message-field')\n          ?.removeAttribute('disabled');\n        this.shadowRoot\n          ?.getElementById('send-message-button')\n          ?.removeAttribute('disabled');\n      }\n    }\n    console.log(_changedProperties);\n  }\n\n  render() {\n    return html`\n      <h3>Chat</h3>\n      <div id=\"chatbox\">\n        ${this.chatLog?.map(entry => {\n          console.log(this.chatLog);\n          return html`<div class=\"chat-entry\">\n            <div>${entry.userName}:</div>\n            <div>${entry.message}</div>\n          </div>`;\n        })}\n      </div>\n      <div id=\"chat-form\">\n        <input id=\"message-field\" type=\"text\" placeholder=\"Message...\" />\n        <button id=\"send-message-button\" @click=${this.handleSendMessage}>\n          Send\n        </button>\n      </div>\n    `;\n  }\n}\n"]}