{"version":3,"file":"network.types.js","sourceRoot":"","sources":["../../../src/types/network.types.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,SAWX;AAXD,WAAY,SAAS;IACnB,gCAAmB,CAAA;IACnB,0BAAa,CAAA;IACb,0BAAa,CAAA;IACb,4CAA+B,CAAA;IAC/B,sCAAyB,CAAA;IACzB,4CAA+B,CAAA;IAC/B,wCAA2B,CAAA;IAC3B,4CAA+B,CAAA;IAC/B,oCAAuB,CAAA;IACvB,sCAAyB,CAAA;AAC3B,CAAC,EAXW,SAAS,KAAT,SAAS,QAWpB","sourcesContent":["export enum WS_EVENTS {\n  MESSAGE = 'message',\n  PING = 'ping',\n  PONG = 'pong',\n  UPDATE_SHAPES = 'update-shapes',\n  GET_SHAPES = 'get-shapes',\n  DELETE_SHAPES = 'delete-shapes',\n  LOCK_SHAPES = 'lock-shapes',\n  UNLOCK_SHAPES = 'unlock-shapes',\n  JOIN_ROOM = 'join-room',\n  DISCONNECT = 'disconnect',\n}\n\nexport type ConnectionStatus = 'disconnected' | 'connected' | 'connecting';\n\nexport type ParsedData = Record<string, any> & {\n  event?: WS_EVENTS;\n  user?: string;\n  userId?: string;\n  value?: Record<string, any>[] | string;\n};\n\nexport type RoomConnectionData = { userName?: string; roomId?: string };\n"]}