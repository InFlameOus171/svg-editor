{"version":3,"file":"Connection.js","sourceRoot":"","sources":["../../../../src/util/network/Connection.ts"],"names":[],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\r\nimport type { ParsedData } from '../../types/network.types';\r\nimport type { ShapeType } from '../../types/shapes.types';\r\nimport { Keeper } from './Keeper';\r\n\r\nexport class Connection {\r\n  ws: WebSocket;\r\n  static userName: string = 'user_' + nanoid(5);\r\n  #userId: string;\r\n  #url: string;\r\n  #port: string;\r\n  #roomId: string;\r\n  #keeper: Keeper;\r\n  #chat?: HTMLElement | null;\r\n  onDeleteShapes: (ids: string[]) => void;\r\n  onUpdateShapes: (shapes: Record<string, any>[]) => void;\r\n  onGetAllShapes: () => ShapeType[];\r\n  onResetEditor: () => void;\r\n  constructor(\r\n    roomId: string = '',\r\n    user: string = 'user_' + nanoid(5),\r\n    onDeleteShapes: (ids: string[]) => void,\r\n    onUpdateShapes: (shape: Record<string, any>[]) => void,\r\n    onGetAllShapes: () => ShapeType[],\r\n    onResetEditor: () => void,\r\n    url: string = 'localhost',\r\n    port: string = '8080'\r\n  ) {\r\n    this.#url = url;\r\n    this.#port = port;\r\n    this.#roomId = roomId;\r\n    Connection.userName = user;\r\n    this.#userId = nanoid();\r\n    this.ws = this.createNewWebSocket();\r\n    this.#keeper = this.#startKeepingConnectionAlive(this.ws);\r\n    this.onDeleteShapes = onDeleteShapes;\r\n    this.onUpdateShapes = onUpdateShapes;\r\n    this.onGetAllShapes = onGetAllShapes;\r\n    this.onResetEditor = onResetEditor;\r\n  }\r\n\r\n  disconnect = () => {\r\n    this.ws.close();\r\n    this.onResetEditor();\r\n  };\r\n\r\n  joinRoom = (roomId: string) => {\r\n    this.connect(this.#url, this.#port, roomId);\r\n  };\r\n\r\n  getRoom = () => {\r\n    return this.#roomId;\r\n  };\r\n\r\n  #parseResponse = (response: any): ParsedData => {\r\n    const allParsedData = JSON.parse(response.data);\r\n    if (allParsedData.event === 'ping' || allParsedData.event === 'pong')\r\n      return allParsedData;\r\n    const { value, ...parsedData } = allParsedData;\r\n    const parsedValue =\r\n      typeof value === 'string'\r\n        ? value\r\n        : (JSON.parse(value) as string[] | undefined)?.map(\r\n            (innerValue): Record<string, any> => JSON.parse(innerValue)\r\n          );\r\n    return { ...parsedData, value: parsedValue };\r\n  };\r\n\r\n  #startKeepingConnectionAlive = (ws: WebSocket) => {\r\n    if (this.#keeper) {\r\n      this.#keeper.destroy();\r\n    }\r\n    this.#keeper = new Keeper(ws);\r\n    return this.#keeper;\r\n  };\r\n\r\n  setChat = (element?: HTMLElement | null) => {\r\n    this.#chat = element;\r\n  };\r\n\r\n  createNewWebSocket = () => {\r\n    const ws = new WebSocket(`ws://${this.#url}:${this.#port}`);\r\n\r\n    ws.onopen = () => {\r\n      const payload = {\r\n        event: 'join-room',\r\n        roomId: this.#roomId,\r\n        value: JSON.stringify(\r\n          this.onGetAllShapes().map(shape => shape.getDeconstructedShapeData())\r\n        ),\r\n        user: Connection.userName,\r\n      };\r\n      ws.send(JSON.stringify(payload));\r\n    };\r\n\r\n    ws.addEventListener('message', msg => {\r\n      const data: ParsedData = this.#parseResponse(msg);\r\n      const { value, event, user, userId } = data;\r\n      switch (event) {\r\n        case 'message':\r\n          {\r\n            const newEntry = document.createElement('div');\r\n            newEntry.setAttribute('class', 'chat-entry');\r\n            const userName = document.createElement('div');\r\n            const message = document.createElement('div');\r\n            userName.innerHTML = user ? user + ':' : '';\r\n            message.innerHTML = value as string;\r\n            newEntry.appendChild(userName);\r\n            newEntry.appendChild(message);\r\n            this.#chat?.appendChild(newEntry);\r\n          }\r\n          break;\r\n        case 'get-shapes': {\r\n          this.onUpdateShapes(JSON.parse(value as string) ?? []);\r\n          break;\r\n        }\r\n        case 'ping': {\r\n        }\r\n      }\r\n    });\r\n    this.#startKeepingConnectionAlive(ws);\r\n    return ws;\r\n  };\r\n\r\n  sendChatMessage = (message?: string) => {\r\n    if (!message) return;\r\n    const payload = JSON.stringify({\r\n      event: 'message',\r\n      roomId: this.#roomId,\r\n      user: Connection.userName,\r\n      userId: this.#userId,\r\n      value: message,\r\n    });\r\n    this.ws.send(payload);\r\n  };\r\n\r\n  sendShapes = (shapes: ShapeType[]) => {\r\n    if (!shapes.length) return;\r\n    const payload = JSON.stringify({\r\n      event: '',\r\n    });\r\n  };\r\n\r\n  #sendShapeWithLock = (\r\n    shape: ShapeType | ShapeType[],\r\n    isLocked: boolean = true\r\n  ) => {\r\n    let _shapes: ShapeType[] = [];\r\n    if (!Array.isArray(shape)) {\r\n      shape.isLocked = isLocked;\r\n      _shapes = [shape];\r\n    } else {\r\n      shape.forEach(shape => (shape.isLocked = isLocked));\r\n      _shapes = shape;\r\n    }\r\n    const payload = JSON.stringify({\r\n      event: isLocked ? 'lock-shapes' : 'unlock-shapes',\r\n      roomId: this.#roomId,\r\n      user: Connection.userName,\r\n      userId: this.#userId,\r\n      value: _shapes.map(shape =>\r\n        JSON.stringify(shape.getDeconstructedShapeData())\r\n      ),\r\n    });\r\n    this.ws.send(payload);\r\n  };\r\n\r\n  lockShapes = (shape: ShapeType | ShapeType[]) => {\r\n    this.#sendShapeWithLock(shape, true);\r\n  };\r\n\r\n  unlockShapes = (shape: ShapeType | ShapeType[]) => {\r\n    this.#sendShapeWithLock(shape, false);\r\n  };\r\n\r\n  deleteShapes = (ids: string[]) => {\r\n    const payload = JSON.stringify({\r\n      event: 'delete-shapes',\r\n      roomId: this.#roomId,\r\n      user: Connection.userName,\r\n      userId: this.#userId,\r\n      value: ids,\r\n    });\r\n    this.ws.send(payload);\r\n  };\r\n\r\n  updateShapes = (shapes: ShapeType | ShapeType[]) => {\r\n    let _shapes: ShapeType[] = [];\r\n    if (!Array.isArray(shapes)) {\r\n      _shapes = [shapes];\r\n    } else {\r\n      _shapes = shapes;\r\n    }\r\n    const payload = JSON.stringify({\r\n      event: 'update-shapes',\r\n      roomId: this.#roomId,\r\n      user: Connection.userName,\r\n      userId: this.#userId,\r\n      value: _shapes.map(shape =>\r\n        JSON.stringify(shape.getDeconstructedShapeData())\r\n      ),\r\n    });\r\n    this.ws.send(payload);\r\n  };\r\n\r\n  connect = (\r\n    url: string = this.#url,\r\n    port: string = this.#port,\r\n    roomId?: string\r\n  ) => {\r\n    this.disconnect();\r\n    url = url;\r\n    port = port;\r\n    roomId = roomId ?? roomId;\r\n    this.createNewWebSocket();\r\n  };\r\n}\r\n"]}