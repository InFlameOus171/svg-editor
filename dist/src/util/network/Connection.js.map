{"version":3,"file":"Connection.js","sourceRoot":"","sources":["../../../../src/util/network/Connection.ts"],"names":[],"mappings":"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","sourcesContent":["import { nanoid } from 'nanoid';\nimport type { ConnectionStatus, ParsedData } from '../../types/network.types';\nimport type { ShapeType } from '../../types/shapes.types';\nimport { Keeper } from './Keeper';\n\nexport class Connection {\n  #userName: string = 'user_' + nanoid(5);\n  #chatLog: Array<{ userName: string; message: string }> = [];\n  #userId: string;\n  #url: string;\n  #port: string;\n  #roomId: string = '';\n  ws: WebSocket | null = null;\n  #keeper?: Keeper;\n  #status?: ConnectionStatus = 'disconnected';\n  onDeleteShapes: (ids: string[]) => void;\n  onUpdateShapes: (shapes: Record<string, any>[]) => void;\n  onGetAllShapes: () => ShapeType[];\n  onResetEditor: () => void;\n  onUpdateConnectionStatus: (status: ConnectionStatus) => void;\n  onNewMessage: (chatLog: Array<{ userName: string; message: string }>) => void;\n\n  constructor(\n    onDeleteShapes: (ids: string[]) => void,\n    onUpdateShapes: (shape: Record<string, any>[]) => void,\n    onGetAllShapes: () => ShapeType[],\n    onResetEditor: () => void,\n    onUpdateConnectionStatus: (status: ConnectionStatus) => void,\n    onNewMessage: (\n      chatLog: Array<{ userName: string; message: string }>\n    ) => void,\n    url: string = 'localhost',\n    port: string = '8080'\n  ) {\n    this.#url = url;\n    this.#port = port;\n    this.#userId = nanoid();\n    this.onDeleteShapes = onDeleteShapes;\n    this.onUpdateShapes = onUpdateShapes;\n    this.onGetAllShapes = onGetAllShapes;\n    this.onResetEditor = onResetEditor;\n    this.onNewMessage = onNewMessage;\n    this.onUpdateConnectionStatus = onUpdateConnectionStatus;\n    this.updateStatus('disconnected');\n  }\n\n  disconnect = () => {\n    this.ws?.close();\n    this.updateStatus('disconnected');\n    this.onResetEditor();\n  };\n\n  getRoom = () => {\n    return this.#roomId;\n  };\n\n  getChatLog = () => {\n    return this.#chatLog;\n  };\n\n  getUserName = () => {\n    return this.#userName;\n  };\n\n  #parseResponse = (response: any): ParsedData => {\n    const allParsedData = JSON.parse(response.data);\n    if (allParsedData.event === 'ping' || allParsedData.event === 'pong')\n      return allParsedData;\n    const { value, ...parsedData } = allParsedData;\n    const parsedValue =\n      typeof value === 'string'\n        ? value\n        : (JSON.parse(value) as string[] | undefined)?.map(\n            (innerValue): Record<string, any> => JSON.parse(innerValue)\n          );\n    return { ...parsedData, value: parsedValue };\n  };\n\n  #startKeepingConnectionAlive = (ws: WebSocket) => {\n    if (this.#keeper) {\n      this.#keeper.destroy();\n    }\n    this.#keeper = new Keeper(ws);\n    return this.#keeper;\n  };\n\n  #createNewWebSocket = () => {\n    const ws = new WebSocket(`ws://${this.#url}:${this.#port}`);\n    this.ws = ws;\n    ws.onopen = () => {\n      const payload = {\n        event: 'join-room',\n        roomId: this.#roomId,\n        value: JSON.stringify(\n          this.onGetAllShapes().map(shape => shape.getDeconstructedShapeData())\n        ),\n        user: this.#userName,\n      };\n      this.updateStatus('connected');\n      ws.send(JSON.stringify(payload));\n    };\n\n    ws.addEventListener('message', msg => {\n      const data: ParsedData = this.#parseResponse(msg);\n      const { value, event, user } = data;\n      switch (event) {\n        case 'message':\n          {\n            if (user && value) {\n              this.#chatLog?.push({ userName: user, message: value as string });\n              this.onNewMessage(this.#chatLog);\n            }\n          }\n          break;\n        case 'get-shapes': {\n          this.onUpdateShapes(JSON.parse(value as string) ?? []);\n          break;\n        }\n        case 'ping': {\n        }\n      }\n    });\n    this.#startKeepingConnectionAlive(ws);\n    this.#keeper = this.#startKeepingConnectionAlive(this.ws);\n  };\n\n  sendChatMessage = (message?: string) => {\n    console.log(message);\n    if (!message) return;\n    const payload = JSON.stringify({\n      event: 'message',\n      roomId: this.#roomId,\n      user: this.#userName,\n      userId: this.#userId,\n      value: message,\n    });\n    this.ws?.send(payload);\n  };\n\n  sendShapes = (shapes: ShapeType[]) => {\n    if (!shapes.length) return;\n    const payload = JSON.stringify({\n      event: '',\n    });\n  };\n\n  #sendShapeWithLock = (\n    shape: ShapeType | ShapeType[],\n    isLocked: boolean = true\n  ) => {\n    let _shapes: ShapeType[] = [];\n    if (!Array.isArray(shape)) {\n      shape.isLocked = isLocked;\n      _shapes = [shape];\n    } else {\n      shape.forEach(shape => (shape.isLocked = isLocked));\n      _shapes = shape;\n    }\n    const payload = JSON.stringify({\n      event: isLocked ? 'lock-shapes' : 'unlock-shapes',\n      roomId: this.#roomId,\n      user: this.#userName,\n      userId: this.#userId,\n      value: _shapes.map(shape =>\n        JSON.stringify(shape.getDeconstructedShapeData())\n      ),\n    });\n    this.ws?.send(payload);\n  };\n\n  lockShapes = (shape: ShapeType | ShapeType[]) => {\n    this.#sendShapeWithLock(shape, true);\n  };\n\n  unlockShapes = (shape: ShapeType | ShapeType[]) => {\n    this.#sendShapeWithLock(shape, false);\n  };\n\n  updateStatus = (status: ConnectionStatus) => {\n    this.#status = status;\n    this.onUpdateConnectionStatus(this.#status);\n  };\n\n  getStatus = () => this.#status;\n\n  deleteShapes = (ids: string[]) => {\n    const payload = JSON.stringify({\n      event: 'delete-shapes',\n      roomId: this.#roomId,\n      user: this.#userName,\n      userId: this.#userId,\n      value: ids,\n    });\n    this.ws?.send(payload);\n  };\n\n  updateShapes = (shapes: ShapeType | ShapeType[]) => {\n    let _shapes: ShapeType[] = [];\n    if (!Array.isArray(shapes)) {\n      _shapes = [shapes];\n    } else {\n      _shapes = shapes;\n    }\n    const payload = JSON.stringify({\n      event: 'update-shapes',\n      roomId: this.#roomId,\n      user: this.#userName,\n      userId: this.#userId,\n      value: _shapes.map(shape =>\n        JSON.stringify(shape.getDeconstructedShapeData())\n      ),\n    });\n    this.ws?.send(payload);\n  };\n\n  connect = (\n    roomId: string,\n    userName: string = this.#userName,\n    url: string = this.#url,\n    port: string = this.#port\n  ) => {\n    this.updateStatus('connecting');\n    this.disconnect();\n    this.#createNewWebSocket();\n    this.#userName = userName;\n    this.#roomId = roomId;\n    this.#url = url;\n    this.#port = port;\n  };\n}\n"]}