{"version":3,"file":"ConnectionMonitor.js","sourceRoot":"","sources":["../../../../src/util/network/ConnectionMonitor.ts"],"names":[],"mappings":";;AAAA,MAAM,OAAO,iBAAiB;IAE5B,YAAY,SAAoB;QADhC,wCAAe;QAUf,YAAO,GAAG,GAAG,EAAE;YACb,uBAAA,IAAI,6BAAI,CAAC,mBAAmB,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;gBAC9C,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;gBAC1C,IAAI,UAAU,CAAC,KAAK,KAAK,MAAM,EAAE;oBAC/B,uBAAA,IAAI,6BAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;iBACnC;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC;QAfA,uBAAA,IAAI,yBAAO,SAAS,MAAA,CAAC;QACrB,SAAS,CAAC,gBAAgB,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE;YAC5C,MAAM,UAAU,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;YAC1C,IAAI,UAAU,CAAC,KAAK,KAAK,MAAM,EAAE;gBAC/B,SAAS,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CASF","sourcesContent":["export class ConnectionMonitor {\n  #ws: WebSocket;\n  constructor(webSocket: WebSocket) {\n    this.#ws = webSocket;\n    webSocket.addEventListener('message', event => {\n      const parsedData = JSON.parse(event.data);\n      if (parsedData.event === 'ping') {\n        webSocket.send('{\"event\":\"pong\"}');\n      }\n    });\n  }\n  destroy = () => {\n    this.#ws.removeEventListener('message', event => {\n      const parsedData = JSON.parse(event.data);\n      if (parsedData.event === 'ping') {\n        this.#ws.send('{\"event\":\"pong\"}');\n      }\n    });\n  };\n}\n"]}