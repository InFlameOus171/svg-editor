{"version":3,"file":"Line.js","sourceRoot":"","sources":["../../../../../src/util/shapes/Line/Line.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\n  Coordinates,\n  LineSVGParams,\n  SVGParamsBase,\n  VectorCoordinates,\n} from '../../../types/types';\nimport { Shape } from '../Shape';\nimport { getLineBoundaries } from './Line.util';\n\nexport class Line extends Shape {\n  points: VectorCoordinates;\n\n  constructor(\n    startPoint: Coordinates,\n    endPoint: Coordinates,\n    svgParams?: Partial<SVGParamsBase>,\n    countShapeCountUp?: boolean,\n    isLocked: boolean = false\n  ) {\n    super(\n      getLineBoundaries(startPoint, endPoint),\n      svgParams,\n      countShapeCountUp,\n      isLocked\n    );\n    this.points = [startPoint, endPoint];\n    this.calculationCenter = [\n      (startPoint[0] + endPoint[0]) / 2,\n      (startPoint[1] + endPoint[1]) / 2,\n    ];\n  }\n\n  moveTo = (coordinates: Coordinates): void => {\n    const xDifference = coordinates[0] - this.calculationCenter[0];\n    const yDifference = coordinates[1] - this.calculationCenter[1];\n    this.calculationCenter = coordinates;\n    this.points = this.points.map(point => [\n      point[0] + xDifference,\n      point[1] + yDifference,\n    ]) as VectorCoordinates;\n    this.moveBoundaries([xDifference, yDifference]);\n  };\n\n  getCenter: () => Coordinates = () => {\n    return this.calculationCenter;\n  };\n\n  toSVGLineParams = (): LineSVGParams => ({\n    x1: this.points[0][0].toString(),\n    y1: this.points[0][1].toString(),\n    x2: this.points[1][0].toString(),\n    y2: this.points[1][1].toString(),\n    ...this.getSvgParams(),\n  });\n\n  getDeconstructedShapeData = () => ({\n    id: this.getId(),\n    type: 'Line',\n    startPoint: this.points[0],\n    endPoint: this.points[1],\n    isLocked: this.isLocked,\n    svgParams: this.getSvgParams(),\n  });\n\n  toString = () => {\n    return JSON.stringify({\n      start: { x: this.points[0][0], y: this.points[0][1] },\n      end: { x: this.points[1][0], y: this.points[1][1] },\n    });\n  };\n}\n"]}