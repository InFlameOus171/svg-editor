{"version":3,"file":"Rectangle.js","sourceRoot":"","sources":["../../../../../src/util/shapes/Rectangle/Rectangle.ts"],"names":[],"mappings":";;AAKA,OAAO,EAAE,sBAAsB,EAAE,MAAM,kBAAkB,CAAC;AAC1D,OAAO,EAAE,KAAK,EAAE,MAAM,UAAU,CAAC;AAEjC,MAAM,OAAO,SAAU,SAAQ,KAAK;IAIlC,YACE,cAA2B,EAC3B,KAAa,EACb,MAAc,EACd,YAAoC,EAAE,EACtC,iBAA2B,EAC3B,WAAoB,KAAK;QAEzB,KAAK,CACH,sBAAsB,CAAC,cAAc,EAAE,KAAK,EAAE,MAAM,CAAC,EACrD,SAAS,EACT,iBAAiB,EACjB,QAAQ,CACT,CAAC;QAhBJ,2BAAiB,CAAC,EAAC;QACnB,4BAAkB,CAAC,EAAC;QAqBpB,WAAM,GAAG,CAAC,WAAwB,EAAE,EAAE;YACpC,uBAAA,IAAI,oBAAU,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAA,CAAC;YAC/D,uBAAA,IAAI,qBAAW,CAAC,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,MAAA,CAAC;QAClE,CAAC,CAAC;QAEF,WAAM,GAAG,CAAC,WAAwB,EAAE,EAAE;YACpC,MAAM,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC/D,MAAM,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC;YAC/D,IAAI,CAAC,iBAAiB,GAAG,WAAW,CAAC;YACrC,IAAI,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC;QAEF,cAAS,GAAsB,GAAG,EAAE;YAClC,OAAO,IAAI,CAAC,iBAAiB,CAAC;QAChC,CAAC,CAAC;QAEF,aAAQ,GAAiB,GAAG,EAAE;YAC5B,OAAO,uBAAA,IAAI,wBAAO,CAAC;QACrB,CAAC,CAAC;QAEF,cAAS,GAAiB,GAAG,EAAE;YAC7B,OAAO,uBAAA,IAAI,yBAAQ,CAAC;QACtB,CAAC,CAAC;QAEF,oBAAe,GAAG,GAAkB,EAAE,CAAC,iBACrC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EACvC,CAAC,EAAE,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EACvC,KAAK,EAAE,uBAAA,IAAI,wBAAO,CAAC,QAAQ,EAAE,EAC7B,MAAM,EAAE,uBAAA,IAAI,yBAAQ,CAAC,QAAQ,EAAE,IAC5B,IAAI,CAAC,YAAY,EAAE,EACtB,CAAC;QAEH,8BAAyB,GAAG,GAAG,EAAE,CAAC,CAAC;YACjC,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE;YAChB,IAAI,EAAE,WAAW;YACjB,cAAc,EAAE,IAAI,CAAC,iBAAiB;YACtC,KAAK,EAAE,uBAAA,IAAI,wBAAO;YAClB,MAAM,EAAE,uBAAA,IAAI,yBAAQ;YACpB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE;SAC/B,CAAC,CAAC;QAEH,aAAQ,GAAG,GAAG,EAAE;YACd,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACzC,CAAC,CAAC;QAjDA,IAAI,CAAC,iBAAiB,GAAG,cAAc,CAAC;QACxC,uBAAA,IAAI,oBAAU,KAAK,MAAA,CAAC;QACpB,uBAAA,IAAI,qBAAW,MAAM,MAAA,CAAC;IACxB,CAAC;CA+CF","sourcesContent":["import type {\n  Coordinates,\n  RectSVGParams,\n  SVGParamsBase,\n} from '../../../types/types';\nimport { getRectangleBoundaries } from './Rectangle.util';\nimport { Shape } from '../Shape';\n\nexport class Rectangle extends Shape {\n  #width: number = 0;\n  #height: number = 0;\n\n  constructor(\n    startingCorner: Coordinates,\n    width: number,\n    height: number,\n    svgParams: Partial<SVGParamsBase> = {},\n    countShapecountUp?: boolean,\n    isLocked: boolean = false\n  ) {\n    super(\n      getRectangleBoundaries(startingCorner, width, height),\n      svgParams,\n      countShapecountUp,\n      isLocked\n    );\n    this.calculationCenter = startingCorner;\n    this.#width = width;\n    this.#height = height;\n  }\n\n  resize = (coordinates: Coordinates) => {\n    this.#width = (coordinates[0] - this.calculationCenter[0]) * 2;\n    this.#height = (coordinates[1] - this.calculationCenter[1]) * 2;\n  };\n\n  moveTo = (coordinates: Coordinates) => {\n    const xDifference = coordinates[0] - this.calculationCenter[0];\n    const yDifference = coordinates[1] - this.calculationCenter[1];\n    this.calculationCenter = coordinates;\n    this.moveBoundaries([xDifference, yDifference]);\n  };\n\n  getCenter: () => Coordinates = () => {\n    return this.calculationCenter;\n  };\n\n  getWidth: () => number = () => {\n    return this.#width;\n  };\n\n  getHeight: () => number = () => {\n    return this.#height;\n  };\n\n  toSvgRectParams = (): RectSVGParams => ({\n    x: this.calculationCenter[0].toString(),\n    y: this.calculationCenter[1].toString(),\n    width: this.#width.toString(),\n    height: this.#height.toString(),\n    ...this.getSvgParams(),\n  });\n\n  getDeconstructedShapeData = () => ({\n    id: this.getId(),\n    type: 'Rectangle',\n    startingCorner: this.calculationCenter,\n    width: this.#width,\n    height: this.#height,\n    isLocked: this.isLocked,\n    svgParams: this.getSvgParams(),\n  });\n\n  toString = () => {\n    return JSON.stringify(this.boundaries);\n  };\n}\n"]}