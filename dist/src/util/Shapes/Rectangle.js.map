{"version":3,"file":"Rectangle.js","sourceRoot":"","sources":["../../../../src/util/Shapes/Rectangle.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\r\n  Coordinates,\r\n  RectSVGParams,\r\n  SVGParamsBase,\r\n} from '../../types/types';\r\nimport { getRectBoundaries } from '../helper/coordinates';\r\nimport { Shape } from './Shape';\r\n\r\nexport class Rectangle extends Shape {\r\n  #startingCorner: Coordinates = [-1, -1];\r\n  #width: number = 0;\r\n  #height: number = 0;\r\n\r\n  constructor(\r\n    startingCorner: Coordinates,\r\n    width: number,\r\n    height: number,\r\n    svgParams: Partial<SVGParamsBase> = {},\r\n    countShapecountUp?: boolean,\r\n    isLocked: boolean = false\r\n  ) {\r\n    super(\r\n      getRectBoundaries(startingCorner, width, height),\r\n      svgParams,\r\n      countShapecountUp,\r\n      isLocked\r\n    );\r\n    this.#startingCorner = startingCorner;\r\n    this.#width = width;\r\n    this.#height = height;\r\n  }\r\n\r\n  resize = (coordinates: Coordinates) => {\r\n    this.#width = (coordinates[0] - this.#startingCorner[0]) * 2;\r\n    this.#height = (coordinates[1] - this.#startingCorner[1]) * 2;\r\n  };\r\n\r\n  moveTo = (coordinates: Coordinates) => {\r\n    const xDifference = coordinates[0] - this.#startingCorner[0];\r\n    const yDifference = coordinates[1] - this.#startingCorner[1];\r\n    this.#startingCorner = coordinates;\r\n    this.moveBoundaries([xDifference, yDifference]);\r\n  };\r\n\r\n  getCenter: () => Coordinates = () => {\r\n    return this.#startingCorner;\r\n  };\r\n\r\n  getWidth: () => number = () => {\r\n    return this.#width;\r\n  };\r\n\r\n  getHeight: () => number = () => {\r\n    return this.#height;\r\n  };\r\n\r\n  toPathParams = () => ({\r\n    x: this.#startingCorner[0],\r\n    y: this.#startingCorner[1],\r\n    width: this.#width,\r\n    height: this.#height,\r\n  });\r\n\r\n  toSvgRectParams = (): RectSVGParams => ({\r\n    x: this.#startingCorner[0].toString(),\r\n    y: this.#startingCorner[1].toString(),\r\n    width: this.#width.toString(),\r\n    height: this.#height.toString(),\r\n    ...this.getSvgParams(),\r\n  });\r\n\r\n  getDeconstructedShapeData = () => ({\r\n    id: this.getId(),\r\n    type: 'Rectangle',\r\n    startingCorner: this.#startingCorner,\r\n    width: this.#width,\r\n    height: this.#height,\r\n    isLocked: this.isLocked,\r\n    svgParams: this.getSvgParams(),\r\n  });\r\n\r\n  toString = () => {\r\n    return JSON.stringify(this.boundaries);\r\n  };\r\n}\r\n"]}