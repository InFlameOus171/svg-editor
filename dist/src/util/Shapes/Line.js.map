{"version":3,"file":"Line.js","sourceRoot":"","sources":["../../../../src/util/Shapes/Line.ts"],"names":[],"mappings":"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","sourcesContent":["import type {\r\n  Coordinates,\r\n  LineSVGParams,\r\n  SVGParamsBase,\r\n  VectorCoordinates,\r\n} from '../../types/types';\r\nimport { getLineBoundaries } from '../helper/coordinates';\r\nimport { Shape } from './Shape';\r\n\r\nexport class Line extends Shape {\r\n  points: VectorCoordinates;\r\n  #center: Coordinates;\r\n\r\n  constructor(\r\n    startPoint: Coordinates,\r\n    endPoint: Coordinates,\r\n    svgParams?: Partial<SVGParamsBase>,\r\n    countShapeCountUp?: boolean,\r\n    isLocked: boolean = false\r\n  ) {\r\n    super(\r\n      getLineBoundaries(startPoint, endPoint),\r\n      svgParams,\r\n      countShapeCountUp,\r\n      isLocked\r\n    );\r\n    this.points = [startPoint, endPoint];\r\n    this.#center = [\r\n      (startPoint[0] + endPoint[0]) / 2,\r\n      (startPoint[1] + endPoint[1]) / 2,\r\n    ];\r\n  }\r\n\r\n  moveTo = (coordinates: Coordinates): void => {\r\n    const xDifference = coordinates[0] - this.#center[0];\r\n    const yDifference = coordinates[1] - this.#center[1];\r\n    this.#center = coordinates;\r\n    this.points = this.points.map(point => [\r\n      point[0] + xDifference,\r\n      point[1] + yDifference,\r\n    ]) as VectorCoordinates;\r\n    this.moveBoundaries([xDifference, yDifference]);\r\n  };\r\n\r\n  getCenter: () => Coordinates = () => {\r\n    return this.#center;\r\n  };\r\n\r\n  toSVGLineParams = (): LineSVGParams => ({\r\n    x1: this.points[0][0].toString(),\r\n    y1: this.points[0][1].toString(),\r\n    x2: this.points[1][0].toString(),\r\n    y2: this.points[1][1].toString(),\r\n    ...this.getSvgParams(),\r\n  });\r\n\r\n  getDeconstructedShapeData = () => ({\r\n    id: this.getId(),\r\n    type: 'Line',\r\n    startPoint: this.points[0],\r\n    endPoint: this.points[1],\r\n    isLocked: this.isLocked,\r\n    svgParams: this.getSvgParams(),\r\n  });\r\n\r\n  toString = () => {\r\n    return JSON.stringify({\r\n      start: { x: this.points[0][0], y: this.points[0][1] },\r\n      end: { x: this.points[1][0], y: this.points[1][1] },\r\n    });\r\n  };\r\n}\r\n"]}