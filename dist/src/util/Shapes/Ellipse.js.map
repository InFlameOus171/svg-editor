{"version":3,"file":"Ellipse.js","sourceRoot":"","sources":["../../../../src/util/Shapes/Ellipse.ts"],"names":[],"mappings":";;AAKA,OAAO,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AAC5D,OAAO,EAAE,KAAK,EAAE,MAAM,SAAS,CAAC;AAEhC,MAAM,OAAO,OAAQ,SAAQ,KAAK;IAIhC,YACE,MAAmB,EACnB,OAAe,EACf,OAAe,EACf,SAAkC,EAClC,iBAA2B,EAC3B,WAAoB,KAAK;QAEzB,KAAK,CACH,mBAAmB,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,CAAC,EAC7C,SAAS,EACT,iBAAiB,EACjB,QAAQ,CACT,CAAC;QAhBJ,kCAAqB;QAsBrB,WAAM,GAAG,CAAC,WAAwB,EAAE,EAAE;YACpC,MAAM,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,uBAAA,IAAI,uBAAQ,CAAC,CAAC,CAAC,CAAC;YACrD,MAAM,WAAW,GAAG,WAAW,CAAC,CAAC,CAAC,GAAG,uBAAA,IAAI,uBAAQ,CAAC,CAAC,CAAC,CAAC;YACrD,uBAAA,IAAI,mBAAW,WAAW,MAAA,CAAC;YAC3B,IAAI,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,WAAW,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC;QAEF,cAAS,GAAG,GAAG,EAAE;YACf,OAAO,uBAAA,IAAI,uBAAQ,CAAC;QACtB,CAAC,CAAC;QAEF,iBAAY,GAAG,GAAG,EAAE,CAAC,CAAC;YACpB,EAAE,EAAE,uBAAA,IAAI,uBAAQ,CAAC,CAAC,CAAC;YACnB,EAAE,EAAE,uBAAA,IAAI,uBAAQ,CAAC,CAAC,CAAC;YACnB,EAAE,EAAE,IAAI,CAAC,OAAO;YAChB,EAAE,EAAE,IAAI,CAAC,OAAO;SACjB,CAAC,CAAC;QAEH,uBAAkB,GAAG,GAAqB,EAAE,CAAC,iBAC3C,EAAE,EAAE,uBAAA,IAAI,uBAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAC9B,EAAE,EAAE,uBAAA,IAAI,uBAAQ,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,EAC9B,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,EAC3B,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,IACxB,IAAI,CAAC,YAAY,EAAE,EACtB,CAAC;QAEH,8BAAyB,GAAG,GAAG,EAAE,CAAC,CAAC;YACjC,IAAI,EAAE,SAAS;YACf,EAAE,EAAE,IAAI,CAAC,KAAK,EAAE;YAChB,MAAM,EAAE,uBAAA,IAAI,uBAAQ;YACpB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,QAAQ,EAAE,IAAI,CAAC,QAAQ;YACvB,SAAS,EAAE,IAAI,CAAC,YAAY,EAAE;SAC/B,CAAC,CAAC;QAEH,aAAQ,GAAG,GAAG,EAAE;YACd,OAAO,IAAI,CAAC,SAAS,CAAC;gBACpB,MAAM,EAAE,uBAAA,IAAI,uBAAQ;gBACpB,OAAO,EAAE,IAAI,CAAC,OAAO;gBACrB,OAAO,EAAE,IAAI,CAAC,OAAO;aACtB,CAAC,CAAC;QACL,CAAC,CAAC;QA/CA,uBAAA,IAAI,mBAAW,MAAM,MAAA,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;IACzB,CAAC;CA6CF","sourcesContent":["import type {\r\n  Coordinates,\r\n  EllipseSVGParams,\r\n  SVGParamsBase,\r\n} from '../../types/types';\r\nimport { getCircleBoundaries } from '../helper/coordinates';\r\nimport { Shape } from './Shape';\r\n\r\nexport class Ellipse extends Shape {\r\n  #center: Coordinates;\r\n  radiusX: number;\r\n  radiusY: number;\r\n  constructor(\r\n    center: Coordinates,\r\n    radiusX: number,\r\n    radiusY: number,\r\n    svgParams?: Partial<SVGParamsBase>,\r\n    countShapeCountUp?: boolean,\r\n    isLocked: boolean = false\r\n  ) {\r\n    super(\r\n      getCircleBoundaries(center, radiusX, radiusY),\r\n      svgParams,\r\n      countShapeCountUp,\r\n      isLocked\r\n    );\r\n    this.#center = center;\r\n    this.radiusX = radiusX;\r\n    this.radiusY = radiusY;\r\n  }\r\n\r\n  moveTo = (coordinates: Coordinates) => {\r\n    const xDifference = coordinates[0] - this.#center[0];\r\n    const yDifference = coordinates[1] - this.#center[1];\r\n    this.#center = coordinates;\r\n    this.moveBoundaries([xDifference, yDifference]);\r\n  };\r\n\r\n  getCenter = () => {\r\n    return this.#center;\r\n  };\r\n\r\n  toPathParams = () => ({\r\n    cx: this.#center[0],\r\n    cy: this.#center[1],\r\n    rx: this.radiusX,\r\n    ry: this.radiusY,\r\n  });\r\n\r\n  toSVGEllipseParams = (): EllipseSVGParams => ({\r\n    cx: this.#center[0].toString(),\r\n    cy: this.#center[1].toString(),\r\n    rx: this.radiusX.toString(),\r\n    ry: this.radiusY.toString(),\r\n    ...this.getSvgParams(),\r\n  });\r\n\r\n  getDeconstructedShapeData = () => ({\r\n    type: 'Ellipse',\r\n    id: this.getId(),\r\n    center: this.#center,\r\n    radiusX: this.radiusX,\r\n    radiusY: this.radiusY,\r\n    isLocked: this.isLocked,\r\n    svgParams: this.getSvgParams(),\r\n  });\r\n\r\n  toString = () => {\r\n    return JSON.stringify({\r\n      center: this.#center,\r\n      radiusX: this.radiusX,\r\n      radiusY: this.radiusY,\r\n    });\r\n  };\r\n}\r\n"]}