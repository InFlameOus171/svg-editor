{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../../src/util/helper/util.ts"],"names":[],"mappings":"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","sourcesContent":["import type { Coordinates } from '../../types/types';\nimport { hexColorCodeRegExp } from './regularExpressions';\n\nexport const getUniqueXandYCoordinatesFromBoundaries = (\n  coordinates: Coordinates[]\n): [number[], number[]] => {\n  const uniqueCoordinates = [...new Map(coordinates)];\n\n  const splitXandYCoordinates = uniqueCoordinates.reduce(\n    (acc: Array<number[]>, innerArray) => {\n      return [\n        [...acc[0], innerArray[0]],\n        [...acc[1], innerArray[1]],\n      ];\n    },\n    [[], []]\n  );\n  return [\n    [...new Set(splitXandYCoordinates[0])],\n    [...new Set(splitXandYCoordinates[1])],\n  ];\n};\n\nexport const arrayFrom = <T>(arrayLike: ArrayLike<T> = []): T[] => {\n  return Array.from(arrayLike);\n};\n\nexport const parseFloat = (value?: string | number | null) => {\n  if (value === undefined || value === null) {\n    return 0;\n  }\n  if (typeof value === 'number') {\n    return value;\n  }\n  return Number.parseFloat(value);\n};\n\nexport const parseToFixed2HexString = (colorValue: RegExpMatchArray) => {\n  let codeValue = parseInt(colorValue[0]).toString(16);\n  if (codeValue.length < 2) {\n    codeValue = '0'.concat(codeValue);\n  }\n\n  return codeValue;\n};\n\nexport const hexToRGBA = (colorCode: string, opacity: string = '1') => {\n  const [, r, g, b] = hexColorCodeRegExp.exec(colorCode) ?? [\n    '#000000',\n    '00',\n    '00',\n    '00',\n  ];\n  const parsedColorCodes = [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16)];\n  return 'rgba('.concat(parsedColorCodes.join(','), ',', opacity, ')');\n};\n\nexport const normalizeColorCode = (\n  colorCode?: string | null\n): { colorCode: string; opacity: string } => {\n  if (!colorCode) {\n    return { colorCode: '#000000', opacity: '0' };\n  }\n  if (colorCode.charAt(0) !== '#') {\n    const numberMatcher = new RegExp(/\\d*\\.?\\d+/g);\n    const parsedColorCodes = [...colorCode.matchAll(numberMatcher)];\n    if (parsedColorCodes.length === 4) {\n      const opacity = parsedColorCodes.pop()?.[0] ?? '0';\n      const rgbColors = parsedColorCodes.map(parseToFixed2HexString);\n      return { colorCode: '#'.concat(rgbColors.join('')), opacity };\n    } else {\n      const rgbColors = parsedColorCodes.map(parseToFixed2HexString);\n      return { colorCode: '#'.concat(rgbColors.join('')), opacity: '1' };\n    }\n  }\n  if (colorCode.length === 4) {\n    const code = colorCode.substring(1);\n    return {\n      colorCode: '#'.concat(\n        code[0],\n        code[0],\n        code[1],\n        code[1],\n        code[2],\n        code[2]\n      ),\n      opacity: '1',\n    };\n  }\n  return { colorCode, opacity: '1' };\n};\n\nexport const relativeCoordinatesCommands = [\n  'a',\n  'c',\n  'm',\n  's',\n  'q',\n  't',\n  'l',\n  'z',\n];\n\nexport const absoluteCoordinatesCommands = [\n  'A',\n  'C',\n  'L',\n  'M',\n  'Q',\n  'S',\n  'T',\n  'Z',\n];\n\nexport const relativeSingleDirectionCommands = ['h', 'v'];\n\nexport const absoluteSingleDirectionCommands = ['H', 'V'];\n\nexport const relativeCommands = [\n  ...relativeCoordinatesCommands,\n  relativeSingleDirectionCommands,\n];\nexport const absoluteCommands = [\n  ...absoluteCoordinatesCommands,\n  absoluteSingleDirectionCommands,\n];\n\nexport const singleDirectionCommands = [\n  ...relativeSingleDirectionCommands,\n  ...absoluteSingleDirectionCommands,\n];\n\nexport const pathCommandValues = [\n  ...relativeCoordinatesCommands,\n  ...absoluteCoordinatesCommands,\n  ...singleDirectionCommands,\n];\n"]}