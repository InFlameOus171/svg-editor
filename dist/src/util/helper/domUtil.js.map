{"version":3,"file":"domUtil.js","sourceRoot":"","sources":["../../../../src/util/helper/domUtil.ts"],"names":[],"mappings":"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","sourcesContent":["import { SVGEditor } from '../../components/organisms/SVGEditor';\nimport type { SVGParamsBase } from '../../types/types';\nimport { SVGParamFieldID, textPlaceHolder, Tools_List } from './constants';\nimport { hexToRGBA, normalizeColorCode } from './util';\n\nexport const inputFieldGetterGenerator =\n  (fieldRoot?: HTMLElement | null) => (id: SVGParamFieldID) => {\n    return fieldRoot?.querySelector('#' + id) as HTMLInputElement | null;\n  };\n\nexport const updateStyleInputFields = (\n  self: SVGEditor,\n  params: SVGParamsBase\n) => {\n  const getFieldByParamId = inputFieldGetterGenerator(\n    self.shadowRoot?.getElementById('footer-input')\n  );\n  const defaultColor = { colorCode: '#000000', opacity: '1' };\n  const strokeColor = params.stroke\n    ? normalizeColorCode(params.stroke)\n    : defaultColor;\n  const fillColor = params.fill\n    ? normalizeColorCode(params.fill)\n    : defaultColor;\n\n  const fillColorInput = getFieldByParamId(SVGParamFieldID.FILL_COLOR);\n  const fillOpacityInput = getFieldByParamId(SVGParamFieldID.FILL_OPACITY);\n  const lineCapInput = getFieldByParamId(SVGParamFieldID.LINE_CAP);\n  const lineDashInput = getFieldByParamId(SVGParamFieldID.LINE_DASH);\n  const strokeColorInput = getFieldByParamId(SVGParamFieldID.STROKE_COLOR);\n  const strokeOpacityInput = getFieldByParamId(SVGParamFieldID.STROKE_OPACITY);\n  const strokeWidthInput = getFieldByParamId(SVGParamFieldID.STROKE_WIDTH);\n  const textFontFamilyInput = getFieldByParamId(\n    SVGParamFieldID.TEXT_FONT_FAMILY\n  );\n  const textFontSizeInput = getFieldByParamId(SVGParamFieldID.TEXT_FONT_SIZE);\n  const textInput = getFieldByParamId(SVGParamFieldID.TEXT);\n  if (fillColorInput) {\n    fillColorInput.value = fillColor.colorCode;\n  }\n  if (fillOpacityInput) {\n    fillOpacityInput.value = fillColor.opacity;\n    fillOpacityInput.dispatchEvent(new Event('change'));\n  }\n  if (lineCapInput) {\n    lineCapInput.value = params.lineCap ?? 'butt';\n  }\n  if (lineDashInput) {\n    lineDashInput.value = params.lineDash?.join(',') ?? '0';\n  }\n  if (strokeColorInput) {\n    strokeColorInput.value = strokeColor.colorCode;\n  }\n  if (strokeOpacityInput) {\n    strokeOpacityInput.value = strokeColor.opacity;\n    strokeOpacityInput.dispatchEvent(new Event('change'));\n  }\n  if (strokeWidthInput) {\n    strokeWidthInput.value = params.strokeWidth ?? '0';\n  }\n  if (textFontFamilyInput) {\n    textFontFamilyInput.value = params.fontFamily ?? 'Arial';\n  }\n  if (textFontSizeInput) {\n    textFontSizeInput.value = params.fontSize?.toString() ?? '18';\n  }\n  if (textInput) {\n    textInput.value = params.text ?? textPlaceHolder;\n  }\n};\n\nexport const getToolButton = (editor: SVGEditor, tool: Tools_List) => {\n  const toolBox = editor.shadowRoot?.getElementById('tool-box');\n  const toolBoxButton = toolBox?.shadowRoot?.getElementById(\n    'tool-box-button-' + tool\n  );\n  return toolBoxButton?.shadowRoot?.getElementById(tool);\n};\n\nexport const setIsButtonActive = (\n  editor: SVGEditor,\n  tool: Tools_List,\n  isActive: boolean = true\n) => {\n  const toolButton = getToolButton(editor, tool);\n  toolButton?.setAttribute('isactive', `${isActive}`);\n};\n\nexport const setIsButtonDisabled = (\n  editor: SVGEditor,\n  tool: Tools_List,\n  isDisabled: boolean = true\n) => {\n  const toolButton = getToolButton(editor, tool);\n  if (isDisabled) {\n    toolButton?.setAttribute('disabled', '');\n  } else {\n    toolButton?.removeAttribute('disabled');\n  }\n};\n\nexport const handleUpdateSVGParameters = (target: SVGEditor) => {\n  const getValueById = getElementValueByIdGenerator(target.shadowRoot);\n  const fill = getValueById(SVGParamFieldID.FILL_COLOR);\n  const fillOpacity = getValueById(SVGParamFieldID.FILL_OPACITY);\n  const fontFamily = getValueById(SVGParamFieldID.TEXT_FONT_FAMILY);\n  const fontSize = parseInt(\n    getValueById(SVGParamFieldID.TEXT_FONT_SIZE) ?? '18'\n  );\n  const lineCap = getValueById(SVGParamFieldID.LINE_CAP) as CanvasLineCap;\n  const lineDash = (getValueById(SVGParamFieldID.LINE_DASH) ?? '0')\n    .split(',')\n    .map(value => parseInt(value.trim()));\n  const stroke = getValueById(SVGParamFieldID.STROKE_COLOR);\n  const strokeOpacity = getValueById(SVGParamFieldID.STROKE_OPACITY);\n  const strokeWidth = getValueById(SVGParamFieldID.STROKE_WIDTH);\n  const text = getValueById(SVGParamFieldID.TEXT);\n  const normalizedFill = hexToRGBA(fill ?? '#000000', fillOpacity);\n  const normalizedStroke = hexToRGBA(stroke ?? '#000000', strokeOpacity);\n  const first = [\n    strokeWidth,\n    normalizedStroke,\n    normalizedFill,\n    lineCap,\n    lineDash,\n    fontFamily,\n    fontSize,\n    text,\n  ].sort();\n  const { bBox, ...rest } = target.editor?.getSVGParams() ?? {};\n  const second = Object.values(rest).sort();\n  if (\n    !first.every((value, index) => {\n      JSON.stringify(value) === JSON.stringify(second[index]);\n    })\n  ) {\n    target.editor?.setShapeParams(\n      true,\n      strokeWidth,\n      normalizedStroke,\n      normalizedFill,\n      lineCap,\n      lineDash,\n      fontFamily,\n      fontSize,\n      text\n    );\n  }\n};\n\nexport const getElementValueByIdGenerator =\n  (shadowRoot?: ShadowRoot | null) => (id: SVGParamFieldID) => {\n    return (shadowRoot?.getElementById(id) as HTMLInputElement | undefined)\n      ?.value;\n  };\n\nexport const measureText = (\n  text: string,\n  params: SVGParamsBase,\n  layer?: HTMLCanvasElement | null,\n  measureContext?: CanvasRenderingContext2D | null\n) => {\n  const canvas = document.createElement('canvas');\n  document.body.appendChild(canvas);\n  let context =\n    layer?.getContext('2d') ?? measureContext ?? canvas.getContext('2d');\n  if (!context) {\n    return;\n  }\n  context.font = `${params.fontSize}px ${params.fontFamily}`;\n  if (params.stroke) {\n    context.strokeStyle = params.stroke;\n  }\n  if (params.lineDash) {\n    context.setLineDash(params.lineDash);\n  }\n  if (params.lineCap) {\n    context.lineCap = params.lineCap;\n  }\n  const size = context.measureText(text);\n  const width = size.width;\n  const height = size.fontBoundingBoxAscent + size.fontBoundingBoxDescent;\n  document.body.removeChild(canvas);\n  return { width, height };\n};\n"]}