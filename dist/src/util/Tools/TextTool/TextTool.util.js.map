{"version":3,"file":"TextTool.util.js","sourceRoot":"","sources":["../../../../../src/util/tools/TextTool/TextTool.util.ts"],"names":[],"mappings":"AAEA,OAAO,EAAE,eAAe,EAAE,eAAe,EAAE,MAAM,wBAAwB,CAAC;AAE1E,MAAM,CAAC,MAAM,sBAAsB,GAAG,CAAC,YAA0B,EAAE,EAAE,CAAC,CAAC;IACrE,mBAAmB,EAAE,CACnB,UAA6B,EAC7B,YAAqB,IAAI,EACzB,EAAE;QACF,UAAU,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE;;YAC7B,MAAM,uBAAuB,GAAG;gBAC9B,eAAe,CAAC,cAAc;gBAC9B,eAAe,CAAC,YAAY;aAC7B,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;YACtB,MAAM,UAAU,GAAG,MAAA,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,0CACvC,cAAc,CAAC,cAAc,CAAC,0CAC9B,aAAa,CAAC,GAAG,GAAG,SAAS,CAAC,CAAC;YACnC,IAAI,SAAS,EAAE;gBACb,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,eAAe,CAAC,UAAU,CAAC,CAAC;gBACxC,IAAI,uBAAuB,EAAE;oBAC3B,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,sBAAsB,0CAAE,eAAe,CAAC,UAAU,CAAC,CAAC;iBACjE;aACF;iBAAM;gBACL,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;gBACzC,IAAI,uBAAuB,EAAE;oBAC3B,MAAA,UAAU,aAAV,UAAU,uBAAV,UAAU,CAAE,sBAAsB,0CAAE,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;iBAClE;aACF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAC,CAAC;AAEH,MAAM,CAAC,MAAM,6BAA6B,GAAG,CAC3C,YAA2B,EAC3B,SAAmB,EACnB,EAAE;;IACF,MAAM,MAAM,GAAG,MAAA,YAAY,aAAZ,YAAY,uBAAZ,YAAY,CAAE,UAAU,0CAAE,cAAc,CACrD,qBAAqB,CACtB,CAAC;IACF,IAAI,MAAM,EAAE;QACV,MAAM,CAAC,KAAK,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC;QAC3D,SAAS;YACP,CAAC,CAAC,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC;YACpC,CAAC,CAAC,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,EAAE,CAAC,CAAC;KACzC;AACH,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,iBAAiB,GAAG,CAAC,SAA0B,EAAE,EAAE;;IAC9D,MAAM,MAAM,GAAG,MAAA,SAAS,aAAT,SAAS,uBAAT,SAAS,CAAE,UAAU,0CAAE,cAAc,CAAC,qBAAqB,CAAC,CAAC;IAC5E,MAAM,IAAI,GACR,MAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,CAAC,aAAa,CAAC,0CAAE,YAAY,CAAC,OAAO,CAAC,mCAC3D,eAAe,CAAC;IAClB,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,aAAa,CAAC,aAAa,CAAC,0CAAE,YAAY,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IAClE,OAAO,IAAI,CAAC;AACd,CAAC,CAAC","sourcesContent":["import { FooterFields } from '../../../components/molecules/FooterFields';\nimport { EditorTemplate } from '../../../components/templates/EditorTemplate';\nimport { SVGParamFieldID, textPlaceHolder } from '../../helper/constants';\n\nexport const paramFieldStateHandler = (footerFields: FooterFields) => ({\n  setAreFieldsEnabled: (\n    fieldNames: SVGParamFieldID[],\n    isEnabled: boolean = true\n  ) => {\n    fieldNames.forEach(fieldName => {\n      const doesInputRangeTwoFields = [\n        SVGParamFieldID.STROKE_OPACITY,\n        SVGParamFieldID.FILL_OPACITY,\n      ].includes(fieldName);\n      const paramField = footerFields?.shadowRoot\n        ?.getElementById('footer-input')\n        ?.querySelector('#' + fieldName);\n      if (isEnabled) {\n        paramField?.removeAttribute('disabled');\n        if (doesInputRangeTwoFields) {\n          paramField?.previousElementSibling?.removeAttribute('disabled');\n        }\n      } else {\n        paramField?.setAttribute('disabled', '');\n        if (doesInputRangeTwoFields) {\n          paramField?.previousElementSibling?.setAttribute('disabled', '');\n        }\n      }\n    });\n  },\n});\n\nexport const setTextParamsSourceVisibility = (\n  footerFields?: FooterFields,\n  isVisible?: boolean\n) => {\n  const source = footerFields?.shadowRoot?.getElementById(\n    'right-input-section'\n  );\n  if (source) {\n    source.style.visibility = isVisible ? 'visible' : 'hidden';\n    isVisible\n      ? source.removeAttribute('disabled')\n      : source.setAttribute('disabled', '');\n  }\n};\n\nexport const getTextFromSource = (svgEditor?: EditorTemplate) => {\n  const source = svgEditor?.shadowRoot?.getElementById('right-input-section');\n  const text =\n    source?.querySelector('#text-input')?.getAttribute('value') ??\n    textPlaceHolder;\n  source?.querySelector('#text-input')?.setAttribute('value', text);\n  return text;\n};\n"]}