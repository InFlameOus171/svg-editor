{"version":3,"file":"EllipseTool.util.js","sourceRoot":"","sources":["../../../../src/util/Tools/EllipseTool.util.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,8BAA8B,EAAE,MAAM,uBAAuB,CAAC;AACvE,OAAO,EAAE,OAAO,EAAE,MAAM,mBAAmB,CAAC;AAE5C,MAAM,CAAC,MAAM,eAAe,GAAG,CAC7B,gBAAkC,EAClC,cAAgC,EAChC,SAAkC,EAClC,iBAA2B,EAC3B,EAAE;IACF,MAAM,MAAM,GAAgB;QAC1B,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7C,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;KAC9C,CAAC;IACF,MAAM,OAAO,GAAG,8BAA8B,CAAC,MAAM,EAAE;QACrD,cAAc,CAAC,CAAC,CAAC;QACjB,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;KAC9C,CAAC,CAAC;IACH,MAAM,OAAO,GAAG,8BAA8B,CAAC,MAAM,EAAE;QACrD,CAAC,gBAAgB,CAAC,CAAC,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC;QAC7C,cAAc,CAAC,CAAC,CAAC;KAClB,CAAC,CAAC;IACH,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE,OAAO,EAAE,OAAO,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;AAC7E,CAAC,CAAC;AAEF,MAAM,CAAC,MAAM,cAAc,GAAG,CAC5B,gBAAkC,EAClC,cAAgC,EAChC,SAAkC,EAClC,iBAA2B,EAC3B,EAAE;IACF,MAAM,MAAM,GAAgB,gBAAgB,CAAC;IAC7C,MAAM,MAAM,GAAG,8BAA8B,CAC3C,gBAAgB,EAChB,cAAc,CACf,CAAC;IACF,OAAO,IAAI,OAAO,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,SAAS,EAAE,iBAAiB,CAAC,CAAC;AAC3E,CAAC,CAAC","sourcesContent":["import type { SVGParamsBase, Coordinates } from '../../types/types';\r\nimport { calculateDistanceBetweenPoints } from '../helper/coordinates';\r\nimport { Ellipse } from '../Shapes/Ellipse';\r\n\r\nexport const generateEllipse = (\r\n  startCoordinates: [number, number],\r\n  endCoordinates: [number, number],\r\n  svgParams?: Partial<SVGParamsBase>,\r\n  countShapecountUp?: boolean\r\n) => {\r\n  const center: Coordinates = [\r\n    (startCoordinates[0] + endCoordinates[0]) / 2,\r\n    (startCoordinates[1] + endCoordinates[1]) / 2,\r\n  ];\r\n  const radiusX = calculateDistanceBetweenPoints(center, [\r\n    endCoordinates[0],\r\n    (startCoordinates[1] + endCoordinates[1]) / 2,\r\n  ]);\r\n  const radiusY = calculateDistanceBetweenPoints(center, [\r\n    (startCoordinates[0] + endCoordinates[0]) / 2,\r\n    endCoordinates[1],\r\n  ]);\r\n  return new Ellipse(center, radiusX, radiusY, svgParams, countShapecountUp);\r\n};\r\n\r\nexport const generateCircle = (\r\n  startCoordinates: [number, number],\r\n  endCoordinates: [number, number],\r\n  svgParams?: Partial<SVGParamsBase>,\r\n  countShapecountUp?: boolean\r\n) => {\r\n  const center: Coordinates = startCoordinates;\r\n  const radius = calculateDistanceBetweenPoints(\r\n    startCoordinates,\r\n    endCoordinates\r\n  );\r\n  return new Ellipse(center, radius, radius, svgParams, countShapecountUp);\r\n};\r\n"]}