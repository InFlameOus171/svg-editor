{"version":3,"file":"MoveTool.js","sourceRoot":"","sources":["../../../../src/util/Tools/MoveTool.ts"],"names":[],"mappings":"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","sourcesContent":["import { SVGEditor } from '../../components/organisms/SVGEditor';\r\nimport type { ShapeType } from '../../types/shapes.types';\r\nimport type { Coordinates, SVGParamsBase } from '../../types/types';\r\nimport { highlightStyle, Tools_List } from '../helper/constants';\r\nimport {\r\n  isPointInsideAnotherShape,\r\n  rectangleParamsFromBoundaries,\r\n} from '../helper/coordinates';\r\nimport { isText } from '../helper/typeguards';\r\nimport { Pen } from '../Pen';\r\nimport { Rectangle } from '../Shapes/Rectangle';\r\nimport { SelectTool } from './SelectTool';\r\nimport { setTextParamsSourceVisibility } from './TextTool.util';\r\nimport { Tool } from './Tool';\r\n\r\nexport class MoveTool extends Tool<ShapeType> {\r\n  constructor(\r\n    drawLayer: HTMLCanvasElement,\r\n    previewLayer: HTMLCanvasElement,\r\n    self: SVGEditor,\r\n    onMove: (shape: ShapeType | ShapeType[] | null) => void,\r\n    offset: Coordinates,\r\n    selectedShape: ShapeType\r\n  ) {\r\n    super(drawLayer, self, onMove, offset, previewLayer);\r\n    const renderingContext = this.drawLayer.getContext('2d');\r\n    if (renderingContext) {\r\n      this.drawContext = renderingContext;\r\n    }\r\n    this.currentShape = selectedShape;\r\n    this.#drawOnPreview = Pen.generatePen(this.previewContext).draw;\r\n    this.updatePreview();\r\n    this.toolName = Tools_List.MOVE;\r\n  }\r\n  #dCenter?: Coordinates;\r\n  #drawOnPreview: (shape: ShapeType, svgParams?: SVGParamsBase) => void;\r\n\r\n  #onDown = (event: MouseEvent) => {\r\n    if (event.button !== 0) return;\r\n    this.previousCoordinates = this.currentCoordinates;\r\n    this.currentCoordinates = this.getCoords(event);\r\n    const currentShapeCenter = this.currentShape?.getCenter() ?? [0, 0];\r\n    this.#dCenter = [\r\n      this.currentCoordinates[0] - currentShapeCenter[0],\r\n      this.currentCoordinates[1] - currentShapeCenter[1],\r\n    ];\r\n    if (\r\n      !this.currentShape ||\r\n      !isPointInsideAnotherShape(this.currentCoordinates)(this.currentShape)\r\n    ) {\r\n      this.isDrawing = false;\r\n      return;\r\n    }\r\n    this.isDrawing = true;\r\n  };\r\n\r\n  updatePreview = () => {\r\n    if (this.currentShape) {\r\n      this.resetPreview();\r\n      const { startingCorner, width, height } = rectangleParamsFromBoundaries(\r\n        this.currentShape.boundaries\r\n      );\r\n\r\n      if (isText(this.currentShape)) {\r\n        setTextParamsSourceVisibility(this.self, true);\r\n        this.#drawOnPreview(this.currentShape, {\r\n          ...this.currentShape.getSvgParams(),\r\n          ...highlightStyle,\r\n          lineDash: [0],\r\n        });\r\n      } else {\r\n        this.#drawOnPreview(this.currentShape, highlightStyle);\r\n        this.#drawOnPreview(\r\n          new Rectangle(startingCorner, width, height, highlightStyle)\r\n        );\r\n      }\r\n    } else {\r\n      this.resetPreview();\r\n    }\r\n  };\r\n  #onMove = (event: MouseEvent) => {\r\n    if (!this.isDrawing) return;\r\n    this.previousCoordinates = this.currentCoordinates;\r\n    this.currentCoordinates = this.getCoords(event);\r\n\r\n    this.currentShape?.moveTo([\r\n      this.currentCoordinates[0] - (this.#dCenter?.[0] ?? 0),\r\n      this.currentCoordinates[1] - (this.#dCenter?.[1] ?? 0),\r\n    ]);\r\n    this.updatePreview();\r\n  };\r\n\r\n  #onUp = () => {\r\n    this.isDrawing = false;\r\n    if (this.currentShape) {\r\n      this.onUpdateEditor(this.currentShape);\r\n      this.updatePreview();\r\n    }\r\n  };\r\n\r\n  changeStyle = (config: SVGParamsBase) => {\r\n    if (this.currentShape) {\r\n      this.currentShape.updateSVGParams(config);\r\n      this.resetPreview();\r\n      this.updatePreview();\r\n    }\r\n  };\r\n\r\n  executeAction = () => {\r\n    this.drawLayer.addEventListener('mousedown', this.#onDown);\r\n    this.drawLayer.addEventListener('mousemove', this.#onMove);\r\n    this.drawLayer.addEventListener('mouseup', this.#onUp);\r\n  };\r\n\r\n  destroy = () => {\r\n    this.drawLayer.removeEventListener('mousedown', this.#onDown);\r\n    this.drawLayer.removeEventListener('mousemove', this.#onMove);\r\n    this.drawLayer.removeEventListener('mouseup', this.#onUp);\r\n  };\r\n}\r\n"]}