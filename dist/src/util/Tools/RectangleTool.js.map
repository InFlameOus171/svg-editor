{"version":3,"file":"RectangleTool.js","sourceRoot":"","sources":["../../../../src/util/Tools/RectangleTool.ts"],"names":[],"mappings":"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","sourcesContent":["import { SVGEditor } from '../../components/organisms/SVGEditor';\r\nimport type { ShapeType } from '../../types/shapes.types';\r\nimport type { Coordinates, SVGParamsBase } from '../../types/types';\r\nimport { Tools_List } from '../helper/constants';\r\nimport {\r\n  getCanvasRectangleValuesFromPoints,\r\n  getFormattedRectangleValuesFromPoints,\r\n} from '../helper/coordinates';\r\nimport { Pen } from '../Pen';\r\nimport { Rectangle } from '../Shapes/Rectangle';\r\nimport { Tool } from './Tool';\r\n\r\nexport class RectangleTool extends Tool<Rectangle> {\r\n  constructor(\r\n    drawLayer: HTMLCanvasElement,\r\n    previewLayer: HTMLCanvasElement,\r\n    self: SVGEditor,\r\n    onCreate: (shape: ShapeType | ShapeType[] | null) => void,\r\n    styles: SVGParamsBase,\r\n    offset: Coordinates\r\n  ) {\r\n    super(drawLayer, self, onCreate, offset, previewLayer, styles);\r\n    this.resetPreview();\r\n    const renderingContext = this.drawLayer.getContext('2d');\r\n    if (renderingContext) {\r\n      this.drawContext = renderingContext;\r\n    }\r\n    this.toolName = Tools_List.RECT;\r\n  }\r\n\r\n  executeAction = () => {\r\n    this.drawLayer.addEventListener('mousemove', this.onMove);\r\n    this.drawLayer.addEventListener('mousedown', this.onDown);\r\n    this.drawLayer.addEventListener('mouseup', this.onUp);\r\n  };\r\n\r\n  destroy = () => {\r\n    this.drawLayer.removeEventListener('mousemove', this.onMove);\r\n    this.drawLayer.removeEventListener('mousedown', this.onDown);\r\n    this.drawLayer.removeEventListener('mouseup', this.onUp);\r\n  };\r\n\r\n  onDown = (event: MouseEvent) => {\r\n    if (event.button !== 0) return;\r\n    this.highlightPreview();\r\n    this.currentCoordinates = this.getCoords(event);\r\n    this.previousCoordinates = this.currentCoordinates;\r\n    this.isDrawing = true;\r\n  };\r\n\r\n  onUp = () => {\r\n    this.resetPreview();\r\n    this.resetView();\r\n    this.isDrawing = false;\r\n    if (this.currentShape) {\r\n      this.createRectangle();\r\n      this.onUpdateEditor(this.currentShape);\r\n    }\r\n    this.resetCoordinates();\r\n  };\r\n\r\n  // TODO - Doppelte funktionen zusammenführen/kürzen\r\n  createRectangle = () => {\r\n    const { startingCorner, width, height } =\r\n      getFormattedRectangleValuesFromPoints(\r\n        this.previousCoordinates,\r\n        this.currentCoordinates\r\n      );\r\n    this.currentShape = new Rectangle(\r\n      startingCorner,\r\n      width,\r\n      height,\r\n      this.drawPenConfig\r\n    );\r\n  };\r\n\r\n  createRectanglePreview = () => {\r\n    const { startingCorner, width, height } =\r\n      getCanvasRectangleValuesFromPoints(\r\n        this.previousCoordinates,\r\n        this.currentCoordinates\r\n      );\r\n    this.currentShape = new Rectangle(\r\n      startingCorner,\r\n      width,\r\n      height,\r\n      this.previewPenConfig,\r\n      false\r\n    );\r\n  };\r\n\r\n  onMove = (event: MouseEvent) => {\r\n    if (this.isDrawing) {\r\n      this.currentCoordinates = this.getCoords(event);\r\n      this.createRectanglePreview();\r\n      if (this.currentShape) {\r\n        this.resetPreview();\r\n        Pen.drawRectangle(\r\n          this.currentShape,\r\n          this.previewContext,\r\n          this.previewPenConfig\r\n        );\r\n      }\r\n    }\r\n  };\r\n}\r\n"]}