{"version":3,"file":"DrawTool.js","sourceRoot":"","sources":["../../../../../src/util/tools/DrawTool/DrawTool.ts"],"names":[],"mappings":"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","sourcesContent":["import { SVGEditor } from '../../../components/organisms/SVGEditor';\nimport type { ShapeType } from '../../../types/shapes.types';\nimport type { Coordinates, SVGParamsBase } from '../../../types/types';\nimport { Tools_List } from '../../helper/constants';\nimport { Pen } from '../../Pen';\nimport { Freehand } from '../../shapes/Freehand/Freehand';\nimport { Line } from '../../shapes/Line/Line';\nimport { Tool } from '../Tool';\n\nexport class DrawTool extends Tool<Freehand, Line> {\n  timesPerSecond: number = 120;\n  currentShapeComponents: Coordinates[] = [];\n  constructor(\n    drawLayer: HTMLCanvasElement,\n    previewLayer: HTMLCanvasElement,\n    self: SVGEditor,\n    onCreate: (shape: ShapeType | ShapeType[] | null) => void,\n    currentStyles: SVGParamsBase,\n    offset: Coordinates\n  ) {\n    super(drawLayer, self, onCreate, offset, previewLayer, currentStyles);\n    this.resetPreview();\n    this.toolName = Tools_List.DRAW;\n  }\n\n  #handleTimeOut = () => {\n    this.shallWait = true;\n    setTimeout(() => {\n      this.shallWait = false;\n    }, 1000 / this.timesPerSecond);\n  };\n\n  #draw = () => {\n    this.currentShape && Pen.drawLine(this.currentShape, this.previewContext);\n  };\n\n  #onDown = (event: MouseEvent) => {\n    if (event.button !== 0) return;\n    this.isDrawing = true;\n    this.currentShapeComponents = [];\n    this.previousCoordinates = this.currentCoordinates;\n    this.currentCoordinates = this.getCoords(event);\n  };\n\n  #onUp = () => {\n    if (this.currentShapeComponents.length > 2) {\n      const completeShape = new Freehand(\n        this.currentShapeComponents,\n        this.drawPenConfig\n      );\n      this.onUpdateEditor(completeShape);\n    }\n\n    this.currentShapeComponents = [];\n    this.isDrawing = false;\n  };\n\n  #onOut = () => {\n    this.isDrawing = false;\n  };\n\n  #onMove = (event: MouseEvent) => {\n    if (!this.isDrawing || this.shallWait) {\n      return;\n    }\n    this.previousCoordinates = this.currentCoordinates;\n    this.currentCoordinates = this.getCoords(event);\n    this.currentShape = new Line(\n      this.previousCoordinates,\n      this.currentCoordinates,\n      this.drawPenConfig,\n      false\n    );\n    Pen.drawLine(this.currentShape, this.previewContext);\n    this.currentShapeComponents.push(this.currentCoordinates);\n    this.#draw();\n    this.#handleTimeOut();\n  };\n\n  executeAction = () => {\n    this.drawLayer.addEventListener('mousemove', this.#onMove);\n    this.drawLayer.addEventListener('mousedown', this.#onDown);\n    this.drawLayer.addEventListener('mouseup', this.#onUp);\n    this.drawLayer.addEventListener('mouseout', this.#onOut);\n  };\n\n  destroy = () => {\n    this.drawLayer.removeEventListener('mousemove', this.#onMove);\n    this.drawLayer.removeEventListener('mousedown', this.#onDown);\n    this.drawLayer.removeEventListener('mouseup', this.#onUp);\n    this.drawLayer.removeEventListener('mouseout', this.#onOut);\n  };\n}\n"]}